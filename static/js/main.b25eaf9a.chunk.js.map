{"version":3,"sources":["components/Dialogs/Message/Message.module.scss","components/common/Preloader/Preloader.module.css","components/Navbar/Navbar.module.scss","components/Users/Users.module.scss","components/Navbar/Navbar.tsx","redux/dialogs-reducer.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/common/FormsControls/FormsControls.tsx","utils/validators/validators.ts","components/Dialogs/AddMessageForm/AddMessageForm.tsx","hoc/withAuthRedirect.tsx","redux/dialogs-selectors.ts","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","api/api.tsx","redux/users-reducer.tsx","assets/images/user-male.png","components/Users/Users.tsx","Img/Ball-1s-200px.svg","components/common/Preloader/Preloader.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","redux/auth-reducer.tsx","redux/auth-selectors.ts","components/Login/Login.tsx","components/Profile/Posts/Post/Post.tsx","components/Profile/Posts/AddNewPostForm/AddNewPostForm.tsx","redux/profile-reducer.tsx","components/Profile/Posts/PostsContainer.tsx","components/Profile/Posts/Posts.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","Img/BarcelonfProfile.jpg","components/Profile/Profile.tsx","redux/profile-selectors.ts","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","redux/header-selectors.ts","components/Header/HeaderContainer.tsx","redux/app-reducer.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.tsx","index.tsx","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Dialogs/Dialogs.module.scss","components/Login/Login.module.scss","components/Header/Header.module.scss","components/Profile/Posts/Post/Post.module.scss","components/Profile/Profile.module.scss","components/Profile/Posts/Posts.module.scss","App.module.scss","components/Dialogs/DialogItem/DialogItem.module.scss","components/Dialogs/AddMessageForm/AddMessageForm.module.scss","components/common/FormsControls/FormsControls.module.scss","components/Profile/Posts/AddNewPostForm/AddNewPostForm.module.scss"],"names":["module","exports","Navbar","className","styles","navbar","list","exact","to","link","activeClassName","activeLink","initialState","dialogs","id","name","messages","message","DialogItem","props","path","dialogName","Message","FormControl","input","meta","hasError","touched","error","formControl","children","Textarea","restProps","Input","required","value","maxLengthCreator","maxLength","length","maxLength50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","wrapperTextarea","Field","component","placeholder","validate","button","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","getDialogs","dialogsPage","getMessages","connector","dispatch","addPost","newMessageBody","type","addPostDialogAC","compose","elementDialogs","map","d","elementsMessages","m","wrapper","wrapperImage","src","alt","wrapperWrapper","dialogsWrapper","messageForm","values","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","console","warn","profileAPI","getUserProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","post","delete","users","totalUsersCount","isFetching","followingInProgress","followSuccess","userID","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","Users","pagesCount","Math","ceil","pages","i","push","p","s","selectedPage","onClick","onPageChanged","u","photos","small","userPhoto","wrapperContent","followed","disabled","some","unfollow","follow","Preloader","preloader","getUsers","userPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","this","React","page","items","count","totalCount","login","setAuthUserDataAC","payload","getAuthUserData","resultCode","getIsAuth","getAuthorizedUserId","LoginReduxForm","style","superInput","checkbox","formSummaryError","stopSubmit","_error","formData","Post","postItem","avatar","angle","postMessage","maxLength10","dialogsData","profile","setStatus","PostsContainer","profilePage","elementsDialogs","postList","wrapperDialogs","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","onStatusChange","e","currentTarget","prevProps","prevState","onChange","onBlur","autoFocus","ProfileInfo","wrapperInfo","imgAvatar","large","wrapperStatus","wrapperTextInfo","fullName","aboutMe","Profile","image","img","getProfile","ProfileContainer","match","params","authorizedUserId","withRouter","Header","header","loginBlock","logout","getLogin","HeaderContainer","initialized","App","initializeApp","appWrapperContent","render","DialogsContainer","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","newPost","filter","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b25eaf9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3bZu7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__2ZuKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__36epL\",\"list\":\"Navbar_list__30kXY\",\"link\":\"Navbar_link__yqqKK\",\"activeLink\":\"Navbar_activeLink__8UUjn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Users_selectedPage__2Qe4i\",\"wrapper\":\"Users_wrapper__3Uf2E\",\"userPhoto\":\"Users_userPhoto__3Nm_q\",\"wrapperContent\":\"Users_wrapperContent__3x_GX\",\"name\":\"Users_name__3i6XT\",\"status\":\"Users_status__1_n2I\",\"button\":\"Users_button__CvXwd\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './Navbar.module.scss';\r\n\r\n\r\nconst Navbar = () => (\r\n    <nav className={styles.navbar}>\r\n        <ul className={styles.list}>\r\n            <li>\r\n                <NavLink exact to=\"/login\" className={styles.link} activeClassName={styles.activeLink}>Login</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/profile\" className={styles.link} activeClassName={styles.activeLink}>Profile</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/dialogs\" className={styles.link} activeClassName={styles.activeLink}>Dialogs</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/settings\" className={styles.link} activeClassName={styles.activeLink}>Settings</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/users\" className={styles.link} activeClassName={styles.activeLink}>Users</NavLink>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n\r\n);\r\n\r\nexport default Navbar;","const initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Sascha'},\r\n        {id: 2, name: 'Maksim'},\r\n        {id: 3, name: 'Katia'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hello'},\r\n        {id: 2, message: 'Hi!'},\r\n        {id: 3, message: 'hello'},\r\n    ]\r\n\r\n}\r\n\r\nexport const dialogsReducer = (state: InitialStateTypeDialogs = initialState, action: DialogsActionsTypes): InitialStateTypeDialogs => {\r\n    switch (action.type) {\r\n        case 'ADD_POST_DIALOG':\r\n            const newPost = {\r\n                id: 4,\r\n                message: action.newMessageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newPost],\r\n            }\r\n    }\r\n    return state\r\n}\r\n//actions\r\nexport const addPostDialogAC = (newMessageBody: string) => ({type: 'ADD_POST_DIALOG', newMessageBody} as const)\r\n//types\r\nexport type DialogsActionsTypes = ReturnType<typeof addPostDialogAC>\r\nexport type InitialStateTypeDialogs = typeof initialState\r\n\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './DialogItem.module.scss';\r\n\r\n\r\nexport const DialogItem: React.FC<DialogsType> = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div>\r\n            <NavLink to={path} className={styles.dialogName} activeClassName={styles.activeLink}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n//types\r\nexport type DialogsType = {\r\n    name: string,\r\n    id: number,\r\n}","import React from 'react';\r\nimport styles from './Message.module.scss';\r\n\r\n\r\nexport const Message: React.FC<MessageType> = (props) => {\r\n    return (\r\n        <div className={styles.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n//types\r\nexport type MessageType = {\r\n    message: string\r\n    id: number\r\n}","import React from 'react';\r\nimport styles from './FormsControls.module.scss'\r\n\r\ntype TextareaPropsType = {\r\n    input: string\r\n    meta: any\r\n}\r\n\r\nconst FormControl: React.FC<TextareaPropsType> = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n\r\n            {hasError && <span>{meta.error}</span>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport const Textarea: React.FC<TextareaPropsType> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><textarea{...input}{...restProps}/></FormControl>\r\n\r\n};\r\n\r\nexport const Input: React.FC<TextareaPropsType> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><input{...input}{...restProps}/></FormControl>\r\n\r\n};\r\n\r\n","export const required = (value: string) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}","import {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport React from 'react';\r\nimport styles from './AddMessageForm.module.scss';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nexport const AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.wrapperTextarea}>\r\n            <div>\r\n                <Field component={Textarea} name={'newMessageBody'}\r\n                       placeholder={'Enter your message'} validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button className={styles.button}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const AddMessageFormRedux = reduxForm<FormDataType>({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n//types\r\ntype FormDataType = {\r\n    newMessageBody: string\r\n}","import React, {ComponentType} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../redux/redux-store';\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}\r\n\r\n","import {AppStateType} from './redux-store';\r\n\r\nexport const getDialogs = (state: AppStateType) => {\r\n    return state.dialogsPage.dialogs\r\n}\r\nexport const getMessages = (state: AppStateType) => {\r\n    return state.dialogsPage.messages\r\n}\r\n\r\n","import React from 'react';\r\nimport {addPostDialogAC} from '../../redux/dialogs-reducer';\r\nimport {Dialogs} from './Dialogs';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose, Dispatch} from 'redux';\r\nimport {getDialogs, getMessages} from '../../redux/dialogs-selectors';\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogs: getDialogs(state),\r\n        messages: getMessages(state),\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        addPost: (newMessageBody: string) => {\r\n            dispatch(addPostDialogAC(newMessageBody))\r\n        }\r\n    }\r\n}\r\nconst connector = connect(mapStateToProps, mapDispatchToProps)\r\n\r\nexport default compose<React.ComponentType>(connector, withAuthRedirect)(Dialogs)\r\n//types\r\nexport type DialogsPropsType = ConnectedProps<typeof connector>\r\n\r\n","import React from 'react';\r\nimport styles from './Dialogs.module.scss'\r\nimport {DialogItem,} from './DialogItem/DialogItem';\r\nimport {Message} from './Message/Message';\r\nimport {AddMessageFormRedux} from './AddMessageForm/AddMessageForm';\r\nimport {DialogsPropsType} from './DialogsContainer';\r\n\r\n\r\nexport const Dialogs = (props: DialogsPropsType) => {\r\n\r\n    const elementDialogs = props.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n    const elementsMessages = props.messages.map(m => <div><Message key={m.id} message={m.message} id={m.id}/></div>)\r\n    const img = 'https://www.fcbarcelona.com/photo-resources/2020/11/02/d2c1d3ab-437b-400a-8df2-3e420b9f0799/imatge_avatars02.jpg?width=1024&height=448'\r\n    const addNewMessage = (values: NewMessageFormValuesType) => {\r\n        props.addPost(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.wrapperImage}>\r\n                <img src={img} alt=\"Barca\"/>\r\n            </div>\r\n            <div className={styles.wrapperWrapper}>\r\n                <div className={styles.dialogsWrapper}>\r\n                    <div>\r\n                        {elementDialogs}\r\n                    </div>\r\n                    <div>\r\n                        {elementsMessages}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.messageForm}>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n//types\r\nexport type NewMessageFormValuesType = {\r\n    newMessageBody: string\r\n}\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '9cd2c268-195b-4b42-abcf-5a1644af026e'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getUserProfile(userId: string) {\r\n        console.warn('Obsolete method.Please profileAPI object.')\r\n        return profileAPI.getUserProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: string) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email: string, password: number, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n","import {usersAPI} from '../api/api';\r\nimport {AppThunk} from './redux-store';\r\n\r\n\r\nconst initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nexport const usersReducer = (state: InitialStateTypeUser = initialState, action: UserActionType): InitialStateTypeUser => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                }))\r\n            }\r\n        case 'SET_USERS':\r\n            return {...state, users: action.users}\r\n        case 'SET_CURRENT_PAGE': {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SET_TOTAL_USERS_COUNT': {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case 'TOGGLE_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userID]\r\n                    : state.followingInProgress.filter((id: string) => id != action.userID)\r\n            } as InitialStateTypeUser\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n//actions\r\nexport const followSuccess = (userID: string) => ({type: 'FOLLOW', userID} as const)\r\nexport const unfollowSuccess = (userID: string) => ({type: 'UNFOLLOW', userID} as const)\r\nexport const setUser = (users: Array<UserType>) => ({type: 'SET_USERS', users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: 'SET_CURRENT_PAGE', currentPage} as const)\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n    type: 'SET_TOTAL_USERS_COUNT',\r\n    count: totalUsersCount\r\n} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({\r\n    type: 'TOGGLE_IS_FETCHING',\r\n    isFetching\r\n} as const)\r\nexport const toggleFollowingProgress = (isFetching: boolean, userID: string | number) => ({\r\n    type: 'TOGGLE_IS_FOLLOWING_PROGRESS',\r\n    isFetching,\r\n    userID\r\n} as const)\r\n//thunks\r\nexport const requestUsers = (page: number, pageSize: number): AppThunk => (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    usersAPI.getUsers(page, pageSize)\r\n        .then(data => {\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setCurrentPage(page))\r\n            dispatch(setUser(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n        })\r\n}\r\nexport const follow = (userId: number & string): AppThunk => (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    usersAPI.follow(userId)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(followSuccess(userId))\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId))\r\n        })\r\n}\r\nexport const unfollow = (userId: number & string): AppThunk => (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    usersAPI.unfollow(userId)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(unfollowSuccess(userId))\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId))\r\n        })\r\n}\r\n//types\r\nexport type InitialStateTypeUser = typeof initialState\r\nexport type UserType = {\r\n    id: string\r\n    photos: string\r\n    name: string\r\n    followed: boolean\r\n    status: string\r\n    location: {\r\n        city: string\r\n        country: string\r\n    }\r\n}\r\nexport type UserActionType =\r\n    ReturnType<typeof followSuccess> |\r\n    ReturnType<typeof unfollowSuccess> |\r\n    ReturnType<typeof setUser> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setTotalUsersCount> |\r\n    ReturnType<typeof toggleIsFetching> |\r\n    ReturnType<typeof toggleFollowingProgress>\r\n\r\n","export default __webpack_public_path__ + \"static/media/user-male.3759889a.png\";","import React from 'react';\r\nimport s from './Users.module.scss';\r\nimport userPhoto from '../../assets/images/user-male.png';\r\nimport {InitialStateTypeUser} from '../../redux/users-reducer';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nexport const Users = (props: UsersType) => {\r\n\r\n    const pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p ? s.selectedPage : ''}\r\n                             onClick={() => {props.onPageChanged(p)}}>{p}</span>\r\n            })}\r\n        </div>\r\n\r\n        <div>{\r\n            props.users.users.map((u: any) => <div key={u.id} className={s.wrapper}>\r\n\r\n                <NavLink to={'/profile/' + u.id}>\r\n                    <img src={u.photos.small != null ? u.photos.small : userPhoto} alt={'image'}\r\n                         className={s.userPhoto}/>\r\n                </NavLink>\r\n                <div className={s.wrapperContent}>\r\n                    <div className={s.name}>{u.name}</div>\r\n                    <div className={s.status}>{u.status}</div>\r\n\r\n                    {u.followed\r\n                        ? <button disabled={props.followingInProgress.some((id: number) => id === u.id)}\r\n                                  className={s.button}\r\n                                  onClick={() => {\r\n                                      props.unfollow(u.id)\r\n                                  }}>UnFollow</button>\r\n\r\n                        : <button disabled={props.followingInProgress.some((id: number) => id === u.id)}\r\n                                  className={s.button}\r\n                                  onClick={() => {\r\n                                      props.follow(u.id)\r\n                                  }}>Follow</button>}\r\n\r\n                </div>\r\n\r\n            </div>)\r\n        }</div>\r\n\r\n    </div>\r\n}\r\n//types\r\nexport type UsersType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: InitialStateTypeUser\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    toggleFollowingProgress: (isFetching: boolean, id: number) => void\r\n    followingInProgress: any\r\n}","export default __webpack_public_path__ + \"static/media/Ball-1s-200px.cc8323a5.svg\";","import React from 'react';\r\nimport preloader from '../../../Img/Ball-1s-200px.svg';\r\nimport styles from './Preloader.module.css'\r\n\r\nconst Preloader = (props: any) => {\r\n    return <div className={styles.wrapper}>\r\n        <img src={preloader}/>\r\n    </div>\r\n};\r\n\r\nexport default  Preloader;","import {AppStateType} from './redux-store';\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n    return state.userPage.users\r\n}\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.userPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.userPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.userPage.currentPage\r\n}\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.userPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.userPage.followingInProgress\r\n}","import React, {ComponentType} from 'react';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {\r\n    followSuccess,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollowSuccess\r\n} from '../../redux/users-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {Users} from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {compose} from 'redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from '../../redux/users-selectors';\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n\r\n    }\r\n}\r\nconst connector = connect(mapStateToProps, {\r\n    follow: followSuccess, unfollow: unfollowSuccess,\r\n    setCurrentPage, toggleFollowingProgress, getUsers: requestUsers\r\n})\r\nexport default compose<ComponentType>(connector)(UsersContainer)\r\n//types\r\nexport type UsersPropsType = ConnectedProps<typeof connector>\r\n\r\n\r\n\r\n\r\n","import {authAPI} from '../api/api';\r\nimport {stopSubmit} from 'redux-form';\r\nimport {AppThunk} from './redux-store';\r\n\r\n\r\nconst initialState = {\r\n    userId: null as null | string ,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nexport const authReducer = (state: InitialStateTypeAuth = initialState, action: AuthActionType): InitialStateTypeAuth => {\r\n    switch (action.type) {\r\n        case 'SET-USER-DATA':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//actions\r\nexport const setAuthUserDataAC = (userID: null, email: null, login: null, isAuth: boolean) => ({\r\n    type: 'SET-USER-DATA',\r\n    payload: {userID, email, login, isAuth}\r\n} as const)\r\n\r\n//thunks\r\nexport const getAuthUserData = (): AppThunk => (dispatch) => {\r\n    return authAPI.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, login, email} = response.data.data\r\n                dispatch(setAuthUserDataAC(id, email, login, true))\r\n            }\r\n        })\r\n}\r\n\r\nexport const login = (email: string, password: number, rememberMe: boolean): AppThunk => dispatch => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                const message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n                dispatch(stopSubmit('login', {_error: message}) as AuthActionType)\r\n            }\r\n        })\r\n}\r\nexport const logout = (): AppThunk => (dispatch) => {\r\n    authAPI.logout()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserDataAC(null, null, null, false))\r\n            }\r\n        })\r\n}\r\n\r\n//types\r\nexport type InitialStateTypeAuth = typeof initialState\r\nexport type AuthActionType =\r\n    ReturnType<typeof setAuthUserDataAC>\r\n","import {AppStateType} from './redux-store';\r\n\r\nexport const getIsAuth = (state: AppStateType) => {\r\n    return state.auth.isAuth\r\n}\r\nexport const getAuthorizedUserId = (state: AppStateType) => {\r\n    return state.auth.userId\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {InjectedFormProps, Field, reduxForm} from 'redux-form';\r\nimport {Input} from '../common/FormsControls/FormsControls';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport style from './Login.module.scss'\r\nimport {getIsAuth} from '../../redux/auth-selectors';\r\n\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'} name={'email'}\r\n                       component={Input} validate={[required]}\r\n                       className={style.superInput}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} name={'password'} type={'password'}\r\n                       component={Input} validate={[required]}\r\n                       className={style.superInput}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field className={style.checkbox} type={'checkbox'} name={'rememberMe'} component={Input}/>\r\n            </div>\r\n\r\n            {props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n\r\n            <div>\r\n                <button className={style.button}>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props: LoginPropsType) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/users'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: getIsAuth(state)\r\n})\r\nconst connector = connect(mapStateToProps, {login})\r\nexport default connector(Login);\r\n//types\r\ntype LoginPropsType = ConnectedProps<typeof connector>\r\ntype FormDataType = {\r\n    email: string\r\n    password: number\r\n    rememberMe: boolean\r\n}","import React from 'react';\r\nimport styles from './Post.module.scss';\r\n\r\nexport type MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nconst Post: React.FC<MessageType> = (props) => (\r\n\r\n    <div className={styles.postItem}>\r\n\r\n        <div className={styles.avatar}>\r\n            <img\r\n                src=\"https://pbs.twimg.com/profile_images/2881220369/2b27ac38b43b17a8c5eacfc443ce3384_400x400.jpeg\"\r\n                alt=\"avatar\"/>\r\n        </div>\r\n\r\n        <div className={styles.angle}/>\r\n        <div className={styles.postMessage}>\r\n            {props.message}\r\n        </div>\r\n\r\n    </div>\r\n\r\n);\r\n\r\nexport default Post;","import {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport React from 'react';\r\nimport styles from './AddNewPostForm.module.scss';\r\nimport {maxLengthCreator, required} from '../../../../utils/validators/validators';\r\nimport {Textarea} from '../../../common/FormsControls/FormsControls';\r\n\r\ntype FormDataType = {\r\n    newMessageBody: string\r\n}\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.wrapperTextarea}>\r\n            <div>\r\n                <Field component={Textarea} name={'newMessageBody'}\r\n                       placeholder={'Enter your message'} validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button className={styles.button}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const AddMessageFormRedux = reduxForm<FormDataType>({form: 'ProfileAddNewPostForm'})(AddNewPostForm)","import {profileAPI, usersAPI} from '../api/api';\r\nimport {AppThunk} from './redux-store';\r\n\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {id: 1, message: 'Hello people!!!!'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Very nice!!!'},\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nexport const profileReducer = (state: InitialStateTypeProfile = initialState, action: ProfileActionsTypes): InitialStateTypeProfile => {\r\n    switch (action.type) {\r\n        case 'ADD-POST':\r\n            const newPost = {\r\n                id: 4,\r\n                message: action.newMessageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                dialogsData: [...state.dialogsData, newPost],\r\n            }\r\n        case 'SET-STATUS':\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case 'SET_USER_PROFILE':\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//actions\r\nexport const addPost = (newMessageBody: string) => ({type: 'ADD-POST', newMessageBody} as const)\r\nexport const setUserProfile = (profile: null) => ({type: 'SET_USER_PROFILE', profile} as const)\r\nexport const setStatus = (status: string) => ({type: 'SET-STATUS', status} as const)\r\n//thunks\r\nexport const getUserProfile = (userId: string): AppThunk => (dispatch) => {\r\n    usersAPI.getUserProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n        })\r\n}\r\nexport const getStatusTC = (userId: string): AppThunk => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data));\r\n        })\r\n}\r\nexport const updateStatus = (status: string): AppThunk => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status))\r\n            }\r\n        })\r\n}\r\n//types\r\nexport type InitialStateTypeProfile = typeof initialState\r\nexport type ProfileActionsTypes =\r\n    ReturnType<typeof addPost> |\r\n    ReturnType<typeof setUserProfile> |\r\n    ReturnType<typeof setStatus>","import React from 'react';\r\nimport {Posts} from './Posts';\r\nimport {addPost} from '../../../redux/profile-reducer';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {AppStateType} from '../../../redux/redux-store';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\nconst mapStateProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsData: state.profilePage.dialogsData,\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        addPost: (newMessageBody: string) => {\r\n            dispatch(addPost(newMessageBody))\r\n        },\r\n    }\r\n}\r\nconst connector = connect(mapStateProps, mapDispatchToProps)\r\nexport const PostsContainer = connector(Posts)\r\n//types\r\nexport type PostsPropsType = ConnectedProps<typeof connector>\r\n\r\n","import React from 'react';\r\nimport styles from './Posts.module.scss';\r\nimport Post from './Post/Post';\r\nimport {AddMessageFormRedux} from './AddNewPostForm/AddNewPostForm';\r\nimport {PostsPropsType} from './PostsContainer';\r\n\r\n\r\nexport const Posts = (props: PostsPropsType) => {\r\n    const elementsDialogs = props.dialogsData.map(d => <Post key={d.id} message={d.message} id={d.id}/>)\r\n    const onAddPost = (values: any) => {\r\n        props.addPost(values.newMessageBody)\r\n    }\r\n    return (\r\n        <div className={styles.postList}>\r\n            <div className={styles.wrapperDialogs}>\r\n                {elementsDialogs}\r\n            </div>\r\n            <div className={styles.form}>\r\n                <AddMessageFormRedux onSubmit={onAddPost}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nexport class ProfileStatus extends React.Component<ProfileStatusPropsType> {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    };\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    };\r\n    onStatusChange = (e: any) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{}>) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onClick={this.activateEditMode}>{this.props.status || '----'}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} onBlur={this.deactivateEditMode} value={this.state.status}\r\n                           autoFocus={true}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//types\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}","import React from 'react';\r\nimport styles from './ProfileInfo.module.scss'\r\nimport {ProfileStatus} from './ProfileStatus';\r\n\r\n\r\nexport const ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.wrapperInfo}>\r\n                <div className={styles.imgAvatar}>\r\n                    <img src={props.profile.photos.large} alt=\"img\"/>\r\n                </div>\r\n                <div className={styles.wrapperStatus}>\r\n                    <div className={styles.wrapperTextInfo}>\r\n                        <div className={styles.name}>{props.profile.fullName}</div>\r\n                        <h4>{props.profile.aboutMe}</h4>\r\n                    </div>\r\n                    <div className={styles.status}>\r\n                        <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n//types\r\ntype ProfileInfoPropsType = {\r\n    profile: any\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/BarcelonfProfile.ba658142.jpg\";","import React from 'react';\r\nimport styles from './Profile.module.scss'\r\nimport {PostsContainer} from './Posts/PostsContainer';\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {PropsType} from './ProfileContainer';\r\nimport image from '../../Img/BarcelonfProfile.jpg'\r\n\r\n\r\nexport const Profile = (props: PropsType) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <img src={image} alt=\"Barca\" className={styles.img}/>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <div className={styles.wrapperDialogs}>\r\n                <PostsContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import {AppStateType} from './redux-store';\r\n\r\nexport const getProfile = (state: AppStateType) => {\r\n    return state.profilePage.profile\r\n}\r\nexport const getStatus = (state: AppStateType) => {\r\n    return state.profilePage.status\r\n}\r\n\r\n\r\n","import React, {ComponentType} from 'react';\r\nimport {Profile} from './Profile';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {getStatusTC, getUserProfile, updateStatus} from '../../redux/profile-reducer';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {getProfile, getStatus} from '../../redux/profile-selectors';\r\nimport {getAuthorizedUserId, getIsAuth} from '../../redux/auth-selectors';\r\n\r\nclass ProfileContainer extends React.Component<ProfilePropsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId as string\r\n            // if (!userId) {\r\n            //     this.props.history.push('/login')\r\n            // }\r\n        }\r\n        if (userId != null) {\r\n            this.props.getUserProfile(userId);\r\n        }\r\n        if (userId != null) {\r\n            this.props.getStatus(userId)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    profile: getProfile(state),\r\n    status: getStatus(state),\r\n    authorizedUserId: getAuthorizedUserId(state),\r\n    isAuth: getIsAuth(state)\r\n})\r\n\r\nconst connector = connect(mapStateToProps, {getUserProfile, getStatus: getStatusTC, updateStatus})\r\nexport default compose<ComponentType>(connector, withRouter, withAuthRedirect)(ProfileContainer)\r\n//types\r\nexport type PropsType = ConnectedProps<typeof connector>\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype ProfilePropsType = RouteComponentProps<PathParamsType> & PropsType\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './Header.module.scss'\r\nimport {HeaderPropsType} from './HeaderContainer';\r\n\r\n\r\nconst img = 'https://upload.wikimedia.org/wikipedia/en/thumb/4/47/FC_Barcelona_%28crest%29.svg/1200px-FC_Barcelona_%28crest%29.svg.png'\r\n\r\nexport const Header = (props: HeaderPropsType) => (\r\n\r\n    <div className={styles.header}>\r\n        <img src={img} alt=\"Logo\"/>\r\n        <div className={styles.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>\r\n                    <span className={styles.login}>{props.login}</span>\r\n                    <button className={styles.button} onClick={props.logout}>Log out</button>\r\n                </div>\r\n                : <NavLink to={'/login'} className={styles.login}>Login</NavLink>}\r\n        </div>\r\n\r\n    </div>\r\n);\r\n\r\n","import {AppStateType} from './redux-store';\r\n\r\nexport const getIsAuth = (state: AppStateType) => {\r\n    return state.auth.isAuth\r\n}\r\nexport const getLogin = (state: AppStateType) => {\r\n    return state.auth.login\r\n}\r\n\r\n","import React from 'react';\r\nimport {Header} from './Header';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {getIsAuth, getLogin} from '../../redux/header-selectors';\r\n\r\n\r\nclass HeaderContainer extends React.Component<HeaderPropsType> {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: getIsAuth(state),\r\n    login: getLogin(state),\r\n})\r\n\r\nconst connector = connect(mapStateToProps, {logout})\r\n\r\nexport default connector(HeaderContainer);\r\n//types\r\nexport type HeaderPropsType = ConnectedProps<typeof connector>\r\n\r\n","import {AppThunk} from './redux-store';\r\nimport {getAuthUserData} from './auth-reducer';\r\n\r\n\r\nconst initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state: InitialStateTypeApp = initialState, action: AppReducerActionType): InitialStateTypeApp => {\r\n    switch (action.type) {\r\n        case 'INITIALIZED_SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//actions\r\nexport const initializedSuccess = () => ({\r\n    type: 'INITIALIZED_SUCCESS',\r\n} as const)\r\n\r\n//thunks\r\nexport const initializeApp = (): AppThunk => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}\r\n//types\r\nexport type InitialStateTypeApp = typeof initialState\r\nexport type AppReducerActionType = ReturnType<typeof initializedSuccess>\r\n","import React from 'react';\r\nimport s from './App.module.scss'\r\nimport Navbar from './components/./Navbar/Navbar';\r\nimport {Route, withRouter} from 'react-router-dom';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport Login from './components/Login/Login';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {initializeApp} from './redux/app-reducer';\r\nimport {AppStateType} from './redux/redux-store';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\n\r\n\r\nclass App extends React.Component<AppPropsType> {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className={s.wrapper}>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className={s.appWrapperContent}>\r\n                    <Route path={'/profile/:userId?'} render={() => <ProfileContainer/>}/>\r\n                    <Route path={'/dialogs'} render={() => <DialogsContainer/>}/>\r\n                    <Route path={'/users'} render={() => <UsersContainer/>}/>\r\n                    <Route path={'/login'} render={() => <Login/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    initialized: state.app.initialized\r\n})\r\nconst connector = connect(mapStateToProps, {initializeApp})\r\nexport default compose<React.ComponentType>(withRouter, connector)(App)\r\n//types\r\nexport type AppPropsType = ConnectedProps<typeof connector>\r\n\r\n\r\n\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {ProfileActionsTypes, profileReducer} from './profile-reducer';\r\nimport {DialogsActionsTypes, dialogsReducer} from './dialogs-reducer';\r\nimport {UserActionType, usersReducer} from './users-reducer';\r\nimport {AuthActionType, authReducer} from './auth-reducer';\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {appReducer, AppReducerActionType} from './app-reducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    userPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app:appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport type AppActionType = DialogsActionsTypes | ProfileActionsTypes | AuthActionType | UserActionType | AppReducerActionType\r\nexport type AppThunk = ThunkAction<void, AppStateType, unknown, AppActionType>\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from './redux/redux-store';\r\nimport {Provider} from 'react-redux';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>,\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperInfo\":\"ProfileInfo_wrapperInfo__3MbAu\",\"imgAvatar\":\"ProfileInfo_imgAvatar__1QiLq\",\"wrapperStatus\":\"ProfileInfo_wrapperStatus__2qALY\",\"wrapperTextInfo\":\"ProfileInfo_wrapperTextInfo__1UXqH\",\"name\":\"ProfileInfo_name__3lfKQ\",\"status\":\"ProfileInfo_status__3XgO-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__STmWp\",\"wrapperImage\":\"Dialogs_wrapperImage__j0XzO\",\"wrapperWrapper\":\"Dialogs_wrapperWrapper__2f0-d\",\"dialogsWrapper\":\"Dialogs_dialogsWrapper__3h4IZ\",\"messageForm\":\"Dialogs_messageForm__1__U3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Login_superInput__3ZC--\",\"checkbox\":\"Login_checkbox__2aNN6\",\"button\":\"Login_button__1DjoE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1CHjx\",\"loginBlock\":\"Header_loginBlock__AlTmb\",\"login\":\"Header_login__2S8ij\",\"button\":\"Header_button__3v77V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItem\":\"Post_postItem__1xyUZ\",\"avatar\":\"Post_avatar__2I_9g\",\"angle\":\"Post_angle__12jGn\",\"postMessage\":\"Post_postMessage__3CeUe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__2cwds\",\"img\":\"Profile_img__3HdyS\",\"wrapperDialogs\":\"Profile_wrapperDialogs__2SKIw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postList\":\"Posts_postList__IPbvV\",\"wrapperDialogs\":\"Posts_wrapperDialogs__bVns4\",\"form\":\"Posts_form__uWDLU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__11dpi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogName\":\"DialogItem_dialogName__Z_0DY\",\"activeLink\":\"DialogItem_activeLink__1NvCU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperTextarea\":\"AddMessageForm_wrapperTextarea__1Tutb\",\"button\":\"AddMessageForm_button__ag_d5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__25eLe\",\"error\":\"FormsControls_error__1oPHf\",\"formSummaryError\":\"FormsControls_formSummaryError__2yHHT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperTextarea\":\"AddNewPostForm_wrapperTextarea__1lPtJ\",\"button\":\"AddNewPostForm_button__24BcD\"};"],"sourceRoot":""}