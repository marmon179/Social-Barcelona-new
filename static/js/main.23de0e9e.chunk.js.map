{"version":3,"sources":["components/Dialogs/Message/Message.module.css","components/common/Preloader/Preloader.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.tsx","redux/dialogs-reducer.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","api/api.tsx","redux/users-reducer.tsx","assets/images/user-male.png","components/Users/Users.tsx","Img/Ball-1s-200px.svg","components/common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","components/Profile/Posts/Post/Post.tsx","components/Profile/Posts/AddNewPostForm/AddNewPostForm.tsx","components/Profile/Posts/Posts.tsx","redux/profile-reducer.tsx","components/Profile/Posts/PostsContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.tsx","index.tsx","components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/Profile.module.css","App.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Users/Users.module.css","components/Header/Header.module.css"],"names":["module","exports","Navbar","className","styles","navbar","list","exact","to","link","activeClassName","activeLink","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","newPost","newMessageBody","DialogItem","props","path","dialogName","Message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","wrapperTextarea","Field","component","placeholder","Dialogs","elementDialogs","map","d","elementsMessages","m","wrapper","wrapperImage","src","alt","wrapperWrapper","dialogsWrapper","values","addPost","mapStateToProps","isAuth","auth","withAuthRedirect","Component","connect","restProps","compose","dialogsPage","dispatch","addPostDialogAC","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","console","warn","profileAPI","getUserProfile","getStatus","updateStatus","status","put","authAPI","users","totalUsersCount","isFetching","followingInProgress","followSuccess","userID","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","usersReducer","u","followed","count","filter","Users","pagesCount","Math","ceil","pages","i","push","p","s","selectedPage","onClick","onPageChanged","photos","small","userPhoto","disabled","some","unfollow","follow","Preloader","preloader","UsersContainer","pageNumber","getUsers","this","React","userPage","setCurrentPage","items","totalCount","Header","header","loginBlock","login","email","authReducer","HeaderContainer","getAuthUserData","resultCode","setAuthUserDataAC","LoginReduxForm","formData","log","Login","Post","postItem","avatar","angle","postMessage","Posts","elementsDialogs","dialogsData","postList","wrapperDialogs","profile","setStatus","profileReducer","PostsContainer","profilePage","addPostAC","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","onStatusChange","e","currentTarget","value","prevProps","prevState","onChange","onBlur","autoFocus","ProfileInfo","wrapperInfo","imgAvatar","large","wrapperStatus","wrapperTextInfo","fullName","aboutMe","Profile","wrapperImg","ProfileContainer","match","params","withRouter","App","appWrapperContent","render","DialogsContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23de0e9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3jJmh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__2ZuKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__14eAf\",\"list\":\"Navbar_list__9BMCG\",\"link\":\"Navbar_link__2N6MG\",\"activeLink\":\"Navbar_activeLink__3gIL1\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './Navbar.module.css';\r\n\r\n\r\nconst Navbar = () => (\r\n    <nav className={styles.navbar}>\r\n        <ul className={styles.list}>\r\n            <li>\r\n                <NavLink exact to='/login' className={styles.link} activeClassName={styles.activeLink}>Login</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/profile' className={styles.link} activeClassName={styles.activeLink}>Profile</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/dialogs' className={styles.link} activeClassName={styles.activeLink}>Dialogs</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/settings' className={styles.link} activeClassName={styles.activeLink}>Settings</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/users' className={styles.link} activeClassName={styles.activeLink}>Users</NavLink>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n\r\n);\r\n\r\nexport default Navbar;","import {ActionsTypes} from './state/store';\r\n\r\ntype MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\ntype DialogsType = {\r\n    name: string,\r\n    id: number,\r\n}\r\nexport type InitialStateTypeDialogs = typeof initialState\r\n\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Sascha'},\r\n        {id: 2, name: 'Maksim'},\r\n        {id: 3, name: 'Katia'},\r\n    ] as Array<DialogsType>,\r\n    messages: [\r\n        {id: 1, message: 'Hello'},\r\n        {id: 2, message: 'Hi!'},\r\n        {id: 3, message: 'hello'},\r\n    ] as Array<MessageType>,\r\n\r\n}\r\n\r\nconst dialogsReducer = (state: InitialStateTypeDialogs = initialState, action: ActionsTypes): InitialStateTypeDialogs => {\r\n    switch (action.type) {\r\n        case 'ADD_POST_DIALOG':\r\n            const newPost: MessageType = {\r\n                id: 4,\r\n                message: action.newMessageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newPost],\r\n            }\r\n    }\r\n    return state\r\n\r\n}\r\n\r\nexport const addPostDialogAC = (newMessageBody: any) => ({type: 'ADD_POST_DIALOG', newMessageBody} as const)\r\n\r\nexport default dialogsReducer","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './DialogItem.module.css';\r\n\r\nexport type DialogsType = {\r\n    name: string,\r\n    id: number,\r\n}\r\n\r\nexport const DialogItem: React.FC<DialogsType> = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div>\r\n            <NavLink to={path} className={styles.dialogName} activeClassName={styles.activeLink}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport styles from './Message.module.css';\n\nexport type MessageType = {\n    message: string\n    id: number\n}\n\nexport const Message: React.FC<MessageType> = (props) => {\n    return (\n        <div className={styles.message}>\n            {props.message}\n        </div>\n    )\n}","import {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport React from 'react';\r\nimport styles from '../Dialogs.module.css';\r\n\r\ntype FormDataType = {\r\n    newMessageBody: string\r\n}\r\nexport const AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.wrapperTextarea}>\r\n            <div>\r\n                <Field component={'textarea'} name={'newMessageBody'} placeholder={'Enter your message'}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const AddMessageFormRedux = reduxForm<FormDataType>({form: 'dialogAddMessageForm'})(AddMessageForm)","import React from 'react';\r\nimport styles from './Dialogs.module.css'\r\nimport {DialogItem, DialogsType,} from './DialogItem/DialogItem';\r\nimport {Message, MessageType} from './Message/Message';\r\nimport {AddMessageFormRedux} from './AddMessageForm/AddMessageForm';\r\n\r\ntype DialogPageType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessageType>\r\n    addPost: (newMessageBody: string) => void\r\n    isAuth: boolean\r\n}\r\n\r\nexport const Dialogs: React.FC<DialogPageType> = (props) => {\r\n\r\n    const elementDialogs = props.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n    const elementsMessages = props.messages.map(m => <div><Message key={m.id} message={m.message} id={m.id}/></div>)\r\n\r\n    const img = 'https://www.fcbarcelona.com/photo-resources/2020/11/02/d2c1d3ab-437b-400a-8df2-3e420b9f0799/imatge_avatars02.jpg?width=1024&height=448'\r\n\r\n    const addNewMessage = (values: any) => {\r\n        props.addPost(values.newMessageBody)\r\n    }\r\n    return (\r\n        <div className={styles.wrapper}>\r\n\r\n            <div className={styles.wrapperImage}>\r\n                <img src={img} alt=\"Barca\"/>\r\n            </div>\r\n\r\n            <div className={styles.wrapperWrapper}>\r\n\r\n                <div className={styles.dialogsWrapper}>\r\n\r\n                    <div>\r\n                        {elementDialogs}\r\n                    </div>\r\n\r\n                    <div>\r\n                        {elementsMessages}\r\n                    </div>\r\n\r\n                </div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React, {ComponentType} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../redux/redux-store';\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}\r\n\r\n","import React from 'react';\r\nimport {addPostDialogAC, InitialStateTypeDialogs} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose, Dispatch} from 'redux';\r\n\r\ntype MapStatePropsType = InitialStateTypeDialogs\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        addPost: (newMessageBody: string) => {\r\n            dispatch(addPostDialogAC(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)\r\n\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '9cd2c268-195b-4b42-abcf-5a1644af026e'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getUserProfile(userId: number) {\r\n        console.warn('Obsolete method.Please profileAPI object.')\r\n        return profileAPI.getUserProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: number) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    }\r\n}\r\n","import {usersAPI} from '../api/api';\r\n\r\nexport type InitialStateTypeUser = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: any\r\n\r\n}\r\n\r\nexport type UserType = {\r\n    id: string\r\n    photos: any\r\n    name: string\r\n    followed: boolean\r\n    status: string\r\n    location: LocationType\r\n}\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\ntype ActionsTypes = {\r\n    type: string\r\n    userID: string\r\n    users: UserType[]\r\n    currentPage: number\r\n    count: number\r\n    isFetching: boolean\r\n\r\n}\r\n\r\nconst initialState: InitialStateTypeUser = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state: InitialStateTypeUser = initialState, action: ActionsTypes): InitialStateTypeUser => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                }))\r\n            }\r\n        case 'SET_USERS':\r\n            return {...state, users: action.users}\r\n        case 'SET_CURRENT_PAGE': {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SET_TOTAL_USERS_COUNT': {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case 'TOGGLE_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userID]\r\n                    : state.followingInProgress.filter((id: any) => id != action.userID)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const followSuccess = (userID: string) => ({type: 'FOLLOW', userID} as const)\r\nexport const unfollowSuccess = (userID: string) => ({type: 'UNFOLLOW', userID} as const)\r\nexport const setUser = (users: Array<UserType>) => ({type: 'SET_USERS', users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: 'SET_CURRENT_PAGE', currentPage} as const)\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n    type: 'SET_TOTAL_USERS_COUNT',\r\n    count: totalUsersCount\r\n} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({\r\n    type: 'TOGGLE_IS_FETCHING',\r\n    isFetching\r\n} as const)\r\nexport const toggleFollowingProgress = (isFetching: boolean, userID: number) => ({\r\n    type: 'TOGGLE_IS_FOLLOWING_PROGRESS',\r\n    isFetching,\r\n    userID\r\n} as const)\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n    return (dispatch:any) => {\r\n\r\n        dispatch(toggleIsFetching(true))\r\n\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(toggleIsFetching(false))\r\n                dispatch(setUser(data.items))\r\n                dispatch(setTotalUsersCount(data.totalCount))\r\n            })\r\n    }\r\n}\r\n\r\nexport const follow = (userId: any) => {\r\n    return (dispatch: any) => {\r\n\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: any) => {\r\n    return (dispatch: any) => {\r\n\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer","export default __webpack_public_path__ + \"static/media/user-male.3759889a.png\";","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user-male.png';\r\nimport {InitialStateTypeUser} from '../../redux/users-reducer';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport type UsersType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: InitialStateTypeUser\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    toggleFollowingProgress: (isFetching: boolean, id: number) => void\r\n    followingInProgress: any\r\n}\r\n\r\nexport const Users = (props: UsersType) => {\r\n\r\n    const pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return <div>\r\n\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p ? s.selectedPage : ''}\r\n                             onClick={() => {\r\n                                 props.onPageChanged(p)\r\n                             }}>{p}</span>\r\n            })}\r\n\r\n        </div>\r\n\r\n        {\r\n            props.users.users.map((u: any) => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                        <img src={u.photos.small != null ? u.photos.small : userPhoto} alt={'image'}\r\n                             className={s.userPhoto}/>\r\n                            </NavLink>\r\n                    </div>\r\n\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button disabled={props.followingInProgress.some((id: number) => id === u.id)}\r\n                                      onClick={() => {props.unfollow(u.id)}}>UnFollow</button>\r\n\r\n                            : <button disabled={props.followingInProgress.some((id: number) => id === u.id)}\r\n                                      onClick={() => {props.follow(u.id)}}>Follow</button>}\r\n\r\n                                </div>\r\n                                </span>\r\n\r\n                <span>\r\n                                <span>\r\n\r\n                                    <div>{u.name}</div>\r\n\r\n                                <div>{u.status}</div>\r\n\r\n                                </span>\r\n\r\n                                <span>\r\n                                <div>\r\n                                    {'u.location.country'}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    {'u.location.city'}\r\n                                </div>\r\n\r\n                                </span>\r\n                </span>\r\n            </div>)\r\n        }\r\n\r\n    </div>\r\n}","export default __webpack_public_path__ + \"static/media/Ball-1s-200px.0c804b5d.svg\";","import React from 'react';\r\nimport preloader from '../../../Img/Ball-1s-200px.svg';\r\nimport styles from './Preloader.module.css'\r\n\r\nconst Preloader = (props: any) => {\r\n    return <div className={styles.wrapper}>\r\n        <img src={preloader}/>\r\n    </div>\r\n};\r\n\r\nexport default  Preloader;","import React, {ComponentType} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    followSuccess,\r\n    getUsers,\r\n    InitialStateTypeUser,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollowSuccess\r\n} from '../../redux/users-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {Users} from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\ntype MapStatePropsType = {\r\n    users: InitialStateTypeUser\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: any\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, id: any) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                   followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.userPage,\r\n        pageSize: state.userPage.pageSize,\r\n        totalUsersCount: state.userPage.totalUsersCount,\r\n        currentPage: state.userPage.currentPage,\r\n        isFetching: state.userPage.isFetching,\r\n        followingInProgress: state.userPage.followingInProgress\r\n\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        follow: followSuccess, unfollow: unfollowSuccess, setCurrentPage,\r\n        toggleFollowingProgress, getUsers\r\n    })\r\n)(UsersContainer)\r\n\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './Header.module.css'\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: null\r\n\r\n}\r\n\r\nconst img = 'https://upload.wikimedia.org/wikipedia/en/thumb/4/47/FC_Barcelona_%28crest%29.svg/1200px-FC_Barcelona_%28crest%29.svg.png'\r\n\r\nconst Header = (props: HeaderPropsType) => (\r\n\r\n    <div className={styles.header}>\r\n\r\n        <img src={img} alt=\"Logo\"/>\r\n\r\n        <div className={styles.loginBlock}>\r\n            {props.isAuth ? props.login : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n\r\n    </div>\r\n);\r\n\r\nexport default Header;","import {authAPI} from '../api/api';\r\n\r\nexport type InitialStateTypeAuth = {\r\n    userId: null\r\n    email: null\r\n    login: null\r\n    isAuth: boolean\r\n\r\n}\r\n\r\ntype DataPropsType = {\r\n    userId: null\r\n    email: null\r\n    login: null\r\n\r\n}\r\n\r\ntype ActionsTypes = {\r\n    type: string\r\n    data: DataPropsType\r\n\r\n}\r\n\r\nconst initialState: InitialStateTypeAuth = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state: InitialStateTypeAuth = initialState, action: ActionsTypes): InitialStateTypeAuth => {\r\n    switch (action.type) {\r\n        case 'SET-USER-DATA':\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserDataAC = (userID: number, email: string, login: string) => ({\r\n    type: 'SET-USER-DATA',\r\n    data: {userID, email, login}\r\n} as const)\r\nexport const getAuthUserData = () => (dispatch: any) => {\r\n    return authAPI.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, login, email} = response.data.data\r\n                dispatch(setAuthUserDataAC(id, email, login))\r\n            }\r\n        })\r\n}\r\n\r\nexport default authReducer","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {getAuthUserData} from '../../redux/auth-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\n\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    login: null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getAuthUserData: () => void\r\n}\r\n\r\n\r\ntype AuthPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass HeaderContainer extends React.Component<AuthPropsType> {\r\n    componentDidMount() {\r\n        this.props.getAuthUserData()\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData})(HeaderContainer);","import React from 'react';\r\nimport {InjectedFormProps, Field, reduxForm} from 'redux-form';\r\n\r\ntype FormDataType = {\r\n    login: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Login'} name={'login'} component={'input'}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} name={'password'} component={'input'}/>\r\n            </div>\r\n            <div>\r\n                <Field type={'checkbox'} name={'rememberMe'} component={'input'}/>\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\nconst onSubmit = (formData: FormDataType) => {\r\n    console.log(formData)\r\n}\r\nconst Login = () => {\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport styles from './Post.module.css';\r\n\r\nexport type MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nconst Post: React.FC<MessageType> = (props) => (\r\n\r\n    <div className={styles.postItem}>\r\n\r\n        <div className={styles.avatar}>\r\n            <img\r\n                src=\"https://pbs.twimg.com/profile_images/2881220369/2b27ac38b43b17a8c5eacfc443ce3384_400x400.jpeg\"\r\n                alt=\"avatar\"/>\r\n        </div>\r\n\r\n        <div className={styles.angle}/>\r\n        <div className={styles.postMessage}>\r\n            {props.message}\r\n        </div>\r\n\r\n    </div>\r\n\r\n);\r\n\r\nexport default Post;","import {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport React from 'react';\r\nimport styles from '../Posts.module.css';\r\n\r\ntype FormDataType = {\r\n    newMessageBody: string\r\n}\r\nconst AddNewPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.wrapperTextarea}>\r\n            <div>\r\n                <Field component={'textarea'} name={'newMessageBody'} placeholder={'Enter your message'}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const AddMessageFormRedux = reduxForm<FormDataType>({form: 'ProfileAddNewPostForm'})(AddNewPostForm)","import React from 'react';\r\nimport styles from './Posts.module.css';\r\nimport Post, {MessageType} from './Post/Post';\r\nimport {AddMessageFormRedux} from './AddNewPostForm/AddNewPostForm';\r\n\r\ntype ProfilePageType = {\r\n    dialogsData: Array<MessageType>\r\n    addPost: (newMessageBody: any) => void\r\n}\r\n\r\nexport const Posts: React.FC<ProfilePageType> = (props) => {\r\n    const elementsDialogs = props.dialogsData.map(d => <Post key={d.id} message={d.message} id={d.id}/>)\r\n\r\n    const onAddPost = (values: any) => {\r\n        props.addPost(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.postList}>\r\n\r\n            <div className={styles.wrapperDialogs}>\r\n                {elementsDialogs}\r\n            </div>\r\n\r\n            <AddMessageFormRedux onSubmit={onAddPost}/>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Posts;\r\n\r\n","import {ActionsTypes} from './state/store';\r\nimport {profileAPI, usersAPI} from '../api/api';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\nexport type InitialStateTypeProfile = typeof initialState\r\n\r\ntype MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {id: 1, message: 'Hello people!!!!'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Very nice!!!'},\r\n    ] as Array<MessageType>,\r\n    profile: null,\r\n    status: ''\r\n\r\n}\r\n\r\nconst profileReducer = (state: InitialStateTypeProfile = initialState, action: ActionsTypes): InitialStateTypeProfile => {\r\n    switch (action.type) {\r\n        case 'ADD-POST':\r\n            const newPost: MessageType = {\r\n                id: 4,\r\n                message: action.newMessageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                dialogsData: [...state.dialogsData, newPost],\r\n            }\r\n        case 'SET-STATUS':\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case 'SET_USER_PROFILE':\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const addPostAC = (newMessageBody:any) => ({type: 'ADD-POST',newMessageBody} as const)\r\nexport const setUserProfile = (profile: null) => ({type: 'SET_USER_PROFILE', profile} as const)\r\nexport const setStatus = (status: string) => ({type: 'SET-STATUS', status} as const)\r\n\r\nexport const getUserProfile = (userId: any) => (dispatch: any) => {\r\n    usersAPI.getUserProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n        })\r\n}\r\n\r\nexport const getStatus = (userId: any) => (dispatch:Dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data));\r\n        })\r\n}\r\nexport const updateStatus = (status: any) => (dispatch: Dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status))\r\n            }\r\n        })\r\n}\r\n\r\n\r\nexport default profileReducer","import React from 'react';\r\nimport Posts from './Posts';\r\nimport {addPostAC, InitialStateTypeProfile} from '../../../redux/profile-reducer';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../../redux/redux-store';\r\nimport {Dispatch} from 'redux';\r\n\r\ntype MapStatePropsType = InitialStateTypeProfile\r\n\r\nconst mapStateProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogsData: state.profilePage.dialogsData,\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        addPost: (newMessageBody: string) => {\r\n            dispatch(addPostAC(newMessageBody))\r\n        },\r\n    }\r\n}\r\nexport const PostsContainer = connect(mapStateProps, mapDispatchToProps)(Posts)\r\n","import React from 'react';\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: any) => void\r\n}\r\n\r\nclass ProfileStatus extends React.Component<ProfileStatusPropsType> {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    };\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    };\r\n    onStatusChange = (e: any) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{}>) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onClick={this.activateEditMode}>{this.props.status || '----'}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} onBlur={this.deactivateEditMode} value={this.state.status}\r\n                           autoFocus={true}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport styles from './ProfileInfo.module.css'\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: any\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\r\n\r\n        return (\r\n            <div>\r\n                <div className={styles.wrapperInfo}>\r\n\r\n                    <div className={styles.imgAvatar}>\r\n                        <img src={props.profile.photos.large} alt=\"img\"/>\r\n                    </div>\r\n\r\n\r\n                    <div className={styles.wrapperStatus}>\r\n\r\n                        <div className={styles.status}>\r\n                            <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                        </div>\r\n\r\n                        <div className={styles.wrapperTextInfo}>\r\n                            <h3>{props.profile.fullName}</h3>\r\n                            <h4>{props.profile.aboutMe}</h4>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n;\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from './Profile.module.css'\r\nimport {PostsContainer} from './Posts/PostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {ProfilePageType} from '../../redux/state/store';\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfilePageType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n        if (!props.profile) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        const image = 'https://store.fcbarcelona.com/medias/Secciones-Desktop-copy.jpg?context=bWFzdGVyfHJvb3R8NDUyNDkyfGltYWdlL2pwZWd8aDQzL2g1OC84ODc4MzQwMDQ2ODc4L1NlY2Npb25lc19EZXNrdG9wIGNvcHkuanBnfGQwOWY1YzQ2OWYxZGY2ZDUyMzcxMThkMjgwNGNlNDBjZWM1YTc5ZDJlYzFkN2Y3ODFiYWI0NzEwNWVjMWI4MWU'\r\n\r\n        return (\r\n            <div className={styles.wrapper}>\r\n\r\n                <div className={styles.wrapperImg}>\r\n                    <img src={image} alt=\"Barca\"/>\r\n                </div>\r\n\r\n                <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n                <div className={styles.wrapperDialogs}>\r\n                    <PostsContainer/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n;\r\n\r\nexport default Profile;","import React, {ComponentType} from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {getStatus, getUserProfile, updateStatus} from '../../redux/profile-reducer';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {ProfilePageType} from '../../redux/state/store';\r\nimport {compose} from 'redux';\r\n\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfilePageType | null\r\n    status: string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (userId: string) => void\r\n    getStatus: (userId: string) => void\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = '2'\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status\r\n})\r\n\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport s from './App.module.css'\r\nimport Navbar from './components/./Navbar/Navbar';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className={s.wrapper}>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className={s.appWrapperContent}>\r\n                    <Route path={'/profile/:userId?'} render={() => <ProfileContainer/>}/>\r\n                    <Route path={'/dialogs'} render={() => <DialogsContainer/>}/>\r\n                    <Route path={'/users'} render={() => <UsersContainer/>}/>\r\n                    <Route path={'/login'} render={() => <Login/>}/>\r\n                </div>\r\n\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    userPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from './redux/redux-store';\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>,\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__i2TJU\",\"wrapperImage\":\"Dialogs_wrapperImage__31RUS\",\"wrapperWrapper\":\"Dialogs_wrapperWrapper__3N0Am\",\"dialogsWrapper\":\"Dialogs_dialogsWrapper__3NLDW\",\"wrapperTextarea\":\"Dialogs_wrapperTextarea__1l0_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperInfo\":\"ProfileInfo_wrapperInfo___Xmfc\",\"wrapperTextInfo\":\"ProfileInfo_wrapperTextInfo__22zT5\",\"imgAvatar\":\"ProfileInfo_imgAvatar__15bpd\",\"status\":\"ProfileInfo_status__14Bi-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postList\":\"Posts_postList__1J7dT\",\"wrapperDialogs\":\"Posts_wrapperDialogs__115nu\",\"wrapperTextarea\":\"Posts_wrapperTextarea__3bl8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItem\":\"Post_postItem__ukIZz\",\"avatar\":\"Post_avatar__2zfO_\",\"postMessage\":\"Post_postMessage__25xok\",\"angle\":\"Post_angle__11NYP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__1wbHz\",\"wrapperImg\":\"Profile_wrapperImg__1o1XL\",\"wrapperDialogs\":\"Profile_wrapperDialogs__1Rflb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2V1M4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogName\":\"DialogItem_dialogName__2VBZG\",\"activeLink\":\"DialogItem_activeLink__3IK2h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__233Xx\",\"selectedPage\":\"Users_selectedPage__tagcj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Fm84\",\"loginBlock\":\"Header_loginBlock__1OZ0X\"};"],"sourceRoot":""}