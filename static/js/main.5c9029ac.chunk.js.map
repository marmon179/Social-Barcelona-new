{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.module.scss","components/Dialogs/AddMessageForm/AddMessageForm.module.scss","components/common/FormsControls/FormsControls.module.scss","components/Login/Login.module.scss","components/Profile/Posts/AddNewPostForm/AddNewPostForm.module.scss","components/Dialogs/Message/Message.module.scss","components/common/Preloader/Preloader.module.css","components/Navbar/Navbar.module.scss","components/Users/Users.module.scss","components/Navbar/Navbar.tsx","redux/dialogs-reducer.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/common/FormsControls/FormsControls.tsx","utils/validators/validators.ts","components/Dialogs/AddMessageForm/AddMessageForm.tsx","hoc/withAuthRedirect.tsx","redux/dialogs-selectors.ts","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","api/api.tsx","utils/object-helpers.ts","redux/users-reducer.tsx","assets/images/user-male.png","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","redux/auth-reducer.tsx","redux/auth-selectors.ts","components/Login/Login.tsx","components/Profile/Posts/Post/Post.tsx","components/Profile/Posts/AddNewPostForm/AddNewPostForm.tsx","components/Profile/Posts/Posts.tsx","redux/profile-reducer.tsx","components/Profile/Posts/PostsContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","Img/Ball-1s-200px.svg","components/common/Preloader/Preloader.tsx","Img/BarcelonfProfile.jpg","components/Profile/Profile.tsx","redux/profile-selectors.ts","components/Profile/ProfileContainer.tsx","components/common/progress/Progress.tsx","components/Header/Header.tsx","redux/header-selectors.ts","components/Header/HeaderContainer.tsx","redux/app-reducer.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.tsx","index.tsx","components/Header/Header.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Dialogs/Dialogs.module.scss","components/Profile/Posts/Post/Post.module.scss","components/Profile/Profile.module.scss","components/Profile/Posts/Posts.module.scss","App.module.scss"],"names":["module","exports","Navbar","className","styles","navbar","list","exact","to","link","activeClassName","activeLink","initialState","dialogs","id","name","messages","message","DialogItem","props","path","dialogName","Message","FormControl","meta","touched","error","children","hasError","formControl","Textarea","input","restProps","Input","createField","placeholder","validators","component","text","Field","validate","required","value","maxLengthCreator","maxLength","length","maxLength50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","wrapperTextarea","button","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","getDialogs","dialogsPage","getMessages","connector","dispatch","addPost","newMessageBody","type","addPostDialogAC","compose","elementDialogs","map","d","elementsMessages","m","wrapper","wrapperImage","src","alt","wrapperWrapper","dialogsWrapper","messageForm","values","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getUserProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","userID","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","Users","pagesCount","Math","ceil","pages","i","push","p","s","selectedPage","onClick","onPageChanged","photos","small","userPhoto","wrapperContent","followed","disabled","some","userPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","this","React","page","a","count","totalCount","login","setAuthUserDataAC","payload","getAuthUserData","resultCode","getIsAuth","getAuthorizedUserId","LoginReduxForm","undefined","style","formSummaryError","stopSubmit","_error","formData","Post","postItem","avatar","angle","postMessage","maxLength10","Posts","memo","elementsDialogs","dialogsData","postList","wrapperDialogs","profile","setStatus","PostsContainer","profilePage","ProfileStatus","useState","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","ProfileInfo","wrapperInfo","imgAvatar","large","wrapperStatus","wrapperTextInfo","fullName","aboutMe","Preloader","preloader","Profile","image","img","getProfile","ProfileContainer","match","params","authorizedUserId","withRouter","useStyles","makeStyles","theme","createStyles","root","width","marginTop","spacing","LinearIndeterminate","classes","LinearProgress","Header","header","loginBlock","logout","progress","getLogin","HeaderContainer","initialized","App","initializeApp","appWrapperContent","render","DialogsContainer","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","newPost","filter","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c9029ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogName\":\"DialogItem_dialogName__Z_0DY\",\"activeLink\":\"DialogItem_activeLink__1NvCU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperTextarea\":\"AddMessageForm_wrapperTextarea__1Tutb\",\"button\":\"AddMessageForm_button__ag_d5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__25eLe\",\"error\":\"FormsControls_error__1oPHf\",\"formSummaryError\":\"FormsControls_formSummaryError__2yHHT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Login_superInput__3ZC--\",\"checkbox\":\"Login_checkbox__2aNN6\",\"button\":\"Login_button__1DjoE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperTextarea\":\"AddNewPostForm_wrapperTextarea__1lPtJ\",\"button\":\"AddNewPostForm_button__24BcD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3bZu7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__2ZuKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__36epL\",\"list\":\"Navbar_list__30kXY\",\"link\":\"Navbar_link__yqqKK\",\"activeLink\":\"Navbar_activeLink__8UUjn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Users_selectedPage__2Qe4i\",\"wrapper\":\"Users_wrapper__3Uf2E\",\"userPhoto\":\"Users_userPhoto__3Nm_q\",\"wrapperContent\":\"Users_wrapperContent__3x_GX\",\"name\":\"Users_name__3i6XT\",\"status\":\"Users_status__1_n2I\",\"button\":\"Users_button__CvXwd\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './Navbar.module.scss';\r\n\r\n\r\nconst Navbar = () => (\r\n    <nav className={styles.navbar}>\r\n        <ul className={styles.list}>\r\n            <li>\r\n                <NavLink exact to=\"/login\" className={styles.link} activeClassName={styles.activeLink}>Login</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/profile\" className={styles.link} activeClassName={styles.activeLink}>Profile</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/dialogs\" className={styles.link} activeClassName={styles.activeLink}>Dialogs</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/settings\" className={styles.link} activeClassName={styles.activeLink}>Settings</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/users\" className={styles.link} activeClassName={styles.activeLink}>Users</NavLink>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n\r\n);\r\n\r\nexport default Navbar;","const initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Sascha'},\r\n        {id: 2, name: 'Maksim'},\r\n        {id: 3, name: 'Katia'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hello'},\r\n        {id: 2, message: 'Hi!'},\r\n        {id: 3, message: 'hello'},\r\n    ]\r\n\r\n}\r\n\r\nexport const dialogsReducer = (state: InitialStateTypeDialogs = initialState, action: DialogsActionsTypes): InitialStateTypeDialogs => {\r\n    switch (action.type) {\r\n        case 'DIALOGS/ADD_POST_DIALOG':\r\n            const newPost = {\r\n                id: 4,\r\n                message: action.newMessageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newPost],\r\n            }\r\n    }\r\n    return state\r\n}\r\n//actions\r\nexport const addPostDialogAC = (newMessageBody: string) => ({type: 'DIALOGS/ADD_POST_DIALOG', newMessageBody} as const)\r\n//types\r\nexport type DialogsActionsTypes = ReturnType<typeof addPostDialogAC>\r\nexport type InitialStateTypeDialogs = typeof initialState\r\n\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './DialogItem.module.scss';\r\n\r\n\r\nexport const DialogItem: React.FC<DialogsType> = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div>\r\n            <NavLink to={path} className={styles.dialogName} activeClassName={styles.activeLink}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n//types\r\nexport type DialogsType = {\r\n    name: string,\r\n    id: number,\r\n}","import React from 'react';\r\nimport styles from './Message.module.scss';\r\n\r\n\r\nexport const Message: React.FC<MessageType> = (props) => {\r\n    return (\r\n        <div className={styles.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n//types\r\nexport type MessageType = {\r\n    message: string\r\n    id: number\r\n}","import React from 'react';\r\nimport styles from './FormsControls.module.scss'\r\nimport {Field} from 'redux-form';\r\n\r\ntype TextareaPropsType = {\r\n    input: string\r\n    meta: any\r\n}\r\n\r\nconst FormControl: React.FC<TextareaPropsType> = ({meta: {touched, error}, children}) => {\r\n\r\n    const hasError = touched && error\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n\r\n            <div>\r\n                {children}\r\n            </div>\r\n\r\n            {hasError && <span>{error}</span>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport const Textarea: React.FC<TextareaPropsType> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><textarea{...input}{...restProps}/></FormControl>\r\n\r\n};\r\n\r\nexport const Input: React.FC<TextareaPropsType> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><input{...input}{...restProps}/></FormControl>\r\n\r\n};\r\nexport const createField = <FormKeysType extends string>(placeholder: any,\r\n                                                         name: FormKeysType,\r\n                                                         validators: any,\r\n                                                         component: any,\r\n                                                         props?: any,\r\n                                                         text?: any) => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               component={component} validate={validators}\r\n               {...props}\r\n        />{text}\r\n    </div>)\r\n\r\n\r\n","export const required = (value: string) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}","import {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport React from 'react';\r\nimport styles from './AddMessageForm.module.scss';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nexport const AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.wrapperTextarea}>\r\n            <div>\r\n                <Field component={Textarea} name={'newMessageBody'}\r\n                       placeholder={'Enter your message'} validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button className={styles.button}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const AddMessageFormRedux = reduxForm<FormDataType>({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n//types\r\ntype FormDataType = {\r\n    newMessageBody: string\r\n}","import React, {ComponentType} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../redux/redux-store';\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}\r\n\r\n","import {AppStateType} from './redux-store';\r\n\r\nexport const getDialogs = (state: AppStateType) => {\r\n    return state.dialogsPage.dialogs\r\n}\r\nexport const getMessages = (state: AppStateType) => {\r\n    return state.dialogsPage.messages\r\n}\r\n\r\n","import React from 'react';\r\nimport {addPostDialogAC} from '../../redux/dialogs-reducer';\r\nimport {Dialogs} from './Dialogs';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose, Dispatch} from 'redux';\r\nimport {getDialogs, getMessages} from '../../redux/dialogs-selectors';\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogs: getDialogs(state),\r\n        messages: getMessages(state),\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        addPost: (newMessageBody: string) => {\r\n            dispatch(addPostDialogAC(newMessageBody))\r\n        }\r\n    }\r\n}\r\nconst connector = connect(mapStateToProps, mapDispatchToProps)\r\n\r\nexport default compose<React.ComponentType>(connector, withAuthRedirect)(Dialogs)\r\n//types\r\nexport type DialogsPropsType = ConnectedProps<typeof connector>\r\n\r\n","import React from 'react';\r\nimport styles from './Dialogs.module.scss'\r\nimport {DialogItem,} from './DialogItem/DialogItem';\r\nimport {Message} from './Message/Message';\r\nimport {AddMessageFormRedux} from './AddMessageForm/AddMessageForm';\r\nimport {DialogsPropsType} from './DialogsContainer';\r\n\r\n\r\nexport const Dialogs = (props: DialogsPropsType) => {\r\n\r\n    const elementDialogs = props.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n    const elementsMessages = props.messages.map(m => <div><Message key={m.id} message={m.message} id={m.id}/></div>)\r\n    const img = 'https://www.fcbarcelona.com/photo-resources/2020/11/02/d2c1d3ab-437b-400a-8df2-3e420b9f0799/imatge_avatars02.jpg?width=1024&height=448'\r\n    const addNewMessage = (values: NewMessageFormValuesType) => {\r\n        props.addPost(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.wrapperImage}>\r\n                <img src={img} alt=\"Barca\"/>\r\n            </div>\r\n            <div className={styles.wrapperWrapper}>\r\n                <div className={styles.dialogsWrapper}>\r\n                    <div>\r\n                        {elementDialogs}\r\n                    </div>\r\n                    <div>\r\n                        {elementsMessages}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.messageForm}>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n//types\r\nexport type NewMessageFormValuesType = {\r\n    newMessageBody: string\r\n}\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '9cd2c268-195b-4b42-abcf-5a1644af026e'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getUserProfile(userId: string) {\r\n        console.warn('Obsolete method.Please profileAPI object.')\r\n        return profileAPI.getUserProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: string) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email: string, password: number, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n","export const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n    return items.map((u: any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from '../api/api';\r\nimport {AppThunk} from './redux-store';\r\nimport {Dispatch} from 'redux';\r\nimport {updateObjectInArray} from '../utils/object-helpers';\r\n\r\n\r\nconst initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\n\r\nexport const usersReducer = (state: InitialStateTypeUser = initialState, action: UserActionType): InitialStateTypeUser => {\r\n    switch (action.type) {\r\n        case 'USERS/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID, 'id', {followed: true})\r\n            }\r\n        case 'USERS/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID, 'id', {followed: false})\r\n            }\r\n        case 'USERS/SET_USERS':\r\n            return {...state, users: action.users}\r\n        case 'USERS/SET_CURRENT_PAGE': {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'USERS/SET_TOTAL_USERS_COUNT': {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case 'USERS/TOGGLE_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'USERS/TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userID]\r\n                    : state.followingInProgress.filter((id: string) => id != action.userID)\r\n            } as InitialStateTypeUser\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n//actions\r\nexport const followSuccess = (userID: string) => ({type: 'USERS/FOLLOW', userID} as const)\r\nexport const unfollowSuccess = (userID: string) => ({type: 'USERS/UNFOLLOW', userID} as const)\r\nexport const setUser = (users: Array<UserType>) => ({type: 'USERS/SET_USERS', users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: 'USERS/SET_CURRENT_PAGE', currentPage} as const)\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n    type: 'USERS/SET_TOTAL_USERS_COUNT',\r\n    count: totalUsersCount\r\n} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({\r\n    type: 'USERS/TOGGLE_IS_FETCHING',\r\n    isFetching\r\n} as const)\r\nexport const toggleFollowingProgress = (isFetching: boolean, userID: string | number) => ({\r\n    type: 'USERS/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n    isFetching,\r\n    userID\r\n} as const)\r\n//thunks\r\nexport const requestUsers = (page: number, pageSize: number): AppThunk => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    let data = await usersAPI.getUsers(page, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setCurrentPage(page))\r\n    dispatch(setUser(data.items))\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n}\r\nconst followUnfollowFlow = async (dispatch: Dispatch, userId: string, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId: number & string): AppThunk => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, await usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\nexport const unfollow = (userId: number & string): AppThunk => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, await usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\n//types\r\nexport type InitialStateTypeUser = typeof initialState\r\nexport type UserType = {\r\n    id: string\r\n    photos: string\r\n    name: string\r\n    followed: boolean\r\n    status: string\r\n    location: {\r\n        city: string\r\n        country: string\r\n    }\r\n}\r\nexport type UserActionType =\r\n    ReturnType<typeof followSuccess> |\r\n    ReturnType<typeof unfollowSuccess> |\r\n    ReturnType<typeof setUser> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setTotalUsersCount> |\r\n    ReturnType<typeof toggleIsFetching> |\r\n    ReturnType<typeof toggleFollowingProgress>\r\n\r\n","export default __webpack_public_path__ + \"static/media/user-male.3759889a.png\";","import React from 'react';\r\nimport s from './Users.module.scss';\r\nimport userPhoto from '../../assets/images/user-male.png';\r\nimport {InitialStateTypeUser} from '../../redux/users-reducer';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nexport const Users = (props: UsersType) => {\r\n\r\n    const pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p ? s.selectedPage : ''}\r\n                             onClick={() => {props.onPageChanged(p)}}>{p}</span>\r\n            })}\r\n        </div>\r\n\r\n        <div>{\r\n            props.users.users.map((u: any) => <div key={u.id} className={s.wrapper}>\r\n\r\n                <NavLink to={'/profile/' + u.id}>\r\n                    <img src={u.photos.small != null ? u.photos.small : userPhoto} alt={'image'}\r\n                         className={s.userPhoto}/>\r\n                </NavLink>\r\n                <div className={s.wrapperContent}>\r\n                    <div className={s.name}>{u.name}</div>\r\n                    <div className={s.status}>{u.status}</div>\r\n\r\n                    {u.followed\r\n                        ? <button disabled={props.followingInProgress.some((id: number) => id === u.id)}\r\n                                  className={s.button}\r\n                                  onClick={() => {\r\n                                      props.unfollow(u.id)\r\n                                  }}>UnFollow</button>\r\n\r\n                        : <button disabled={props.followingInProgress.some((id: number) => id === u.id)}\r\n                                  className={s.button}\r\n                                  onClick={() => {\r\n                                      props.follow(u.id)\r\n                                  }}>Follow</button>}\r\n\r\n                </div>\r\n\r\n            </div>)\r\n        }</div>\r\n\r\n    </div>\r\n}\r\n//types\r\nexport type UsersType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: InitialStateTypeUser\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    toggleFollowingProgress: (isFetching: boolean, id: number) => void\r\n    followingInProgress: any\r\n}","import {AppStateType} from './redux-store';\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n    return state.userPage.users\r\n}\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.userPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.userPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.userPage.currentPage\r\n}\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.userPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.userPage.followingInProgress\r\n}","import React, {ComponentType} from 'react';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {\r\n    followSuccess,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollowSuccess\r\n} from '../../redux/users-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {Users} from './Users';\r\nimport {compose} from 'redux';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from '../../redux/users-selectors';\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n\r\n    }\r\n}\r\nconst connector = connect(mapStateToProps, {\r\n    follow: followSuccess, unfollow: unfollowSuccess,\r\n    setCurrentPage, toggleFollowingProgress, getUsers: requestUsers\r\n})\r\nexport default compose<ComponentType>(connector)(UsersContainer)\r\n//types\r\nexport type UsersPropsType = ConnectedProps<typeof connector>\r\n\r\n\r\n\r\n\r\n","import {authAPI} from '../api/api';\r\nimport {stopSubmit} from 'redux-form';\r\nimport {AppThunk} from './redux-store';\r\n\r\n\r\nconst initialState = {\r\n    userId: null as null | string,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nexport const authReducer = (state: InitialStateTypeAuth = initialState, action: AuthActionType): InitialStateTypeAuth => {\r\n    switch (action.type) {\r\n        case 'AUTH/SET-USER-DATA':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//actions\r\nexport const setAuthUserDataAC = (userID: null, email: null, login: null, isAuth: boolean) => ({\r\n    type: 'AUTH/SET-USER-DATA',\r\n    payload: {userID, email, login, isAuth}\r\n} as const)\r\n\r\n//thunks\r\nexport const getAuthUserData = (): AppThunk => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data\r\n        dispatch(setAuthUserDataAC(id, email, login, true))\r\n    }\r\n}\r\nexport const login = (email: string, password: number, rememberMe: boolean): AppThunk => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        const message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}) as AuthActionType)\r\n    }\r\n}\r\nexport const logout = (): AppThunk => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserDataAC(null, null, null, false))\r\n    }\r\n}\r\n//types\r\nexport type InitialStateTypeAuth = typeof initialState\r\nexport type AuthActionType = ReturnType<typeof setAuthUserDataAC>\r\n","import {AppStateType} from './redux-store';\r\n\r\nexport const getIsAuth = (state: AppStateType) => {\r\n    return state.auth.isAuth\r\n}\r\nexport const getAuthorizedUserId = (state: AppStateType) => {\r\n    return state.auth.userId\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {createField, Input} from '../common/FormsControls/FormsControls';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport style from './Login.module.scss'\r\nimport {getIsAuth} from '../../redux/auth-selectors';\r\n\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField(undefined, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n\r\n            <div>\r\n                <button className={style.button}>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props: LoginPropsType) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/users'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: getIsAuth(state)\r\n})\r\nconst connector = connect(mapStateToProps, {login})\r\nexport default connector(Login);\r\n//types\r\ntype LoginPropsType = ConnectedProps<typeof connector>\r\ntype FormDataType = {\r\n    email: string\r\n    password: number\r\n    rememberMe: boolean\r\n}","import React from 'react';\r\nimport styles from './Post.module.scss';\r\n\r\nexport type MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nconst Post: React.FC<MessageType> = (props) => (\r\n\r\n    <div className={styles.postItem}>\r\n\r\n        <div className={styles.avatar}>\r\n            <img\r\n                src=\"https://pbs.twimg.com/profile_images/2881220369/2b27ac38b43b17a8c5eacfc443ce3384_400x400.jpeg\"\r\n                alt=\"avatar\"/>\r\n        </div>\r\n\r\n        <div className={styles.angle}/>\r\n        <div className={styles.postMessage}>\r\n            {props.message}\r\n        </div>\r\n\r\n    </div>\r\n\r\n);\r\n\r\nexport default Post;","import {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport React from 'react';\r\nimport styles from './AddNewPostForm.module.scss';\r\nimport {maxLengthCreator, required} from '../../../../utils/validators/validators';\r\nimport {Textarea} from '../../../common/FormsControls/FormsControls';\r\n\r\ntype FormDataType = {\r\n    newMessageBody: string\r\n}\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.wrapperTextarea}>\r\n            <div>\r\n                <Field component={Textarea} name={'newMessageBody'}\r\n                       placeholder={'Enter your message'} validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button className={styles.button}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const AddMessageFormRedux = reduxForm<FormDataType>({form: 'ProfileAddNewPostForm'})(AddNewPostForm)","import React from 'react';\r\nimport styles from './Posts.module.scss';\r\nimport Post from './Post/Post';\r\nimport {AddMessageFormRedux} from './AddNewPostForm/AddNewPostForm';\r\nimport {PostsPropsType} from './PostsContainer';\r\n\r\n\r\nexport const Posts = React.memo((props: PostsPropsType) => {\r\n    const elementsDialogs = props.dialogsData.map(d => <Post key={d.id} message={d.message} id={d.id}/>)\r\n    const onAddPost = (values: any) => {\r\n        props.addPost(values.newMessageBody)\r\n    }\r\n    return (\r\n        <div className={styles.postList}>\r\n            <div className={styles.wrapperDialogs}>\r\n                {elementsDialogs}\r\n            </div>\r\n            <div className={styles.form}>\r\n                <AddMessageFormRedux onSubmit={onAddPost}/>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\n","import {profileAPI, usersAPI} from '../api/api';\r\nimport {AppThunk} from './redux-store';\r\n\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {id: 1, message: 'Hello people!!!!'},\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nexport const profileReducer = (state: InitialStateTypeProfile = initialState, action: ProfileActionsTypes): InitialStateTypeProfile => {\r\n    switch (action.type) {\r\n        case 'PROFILE/ADD-POST':\r\n            const newPost = {\r\n                id: 2,\r\n                message: action.newMessageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                dialogsData: [...state.dialogsData, newPost],\r\n            }\r\n        case 'PROFILE/SET-STATUS':\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case 'PROFILE/SET_USER_PROFILE':\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//actions\r\nexport const addPost = (newMessageBody: string) => ({type: 'PROFILE/ADD-POST', newMessageBody} as const)\r\nexport const setUserProfile = (profile: null) => ({type: 'PROFILE/SET_USER_PROFILE', profile} as const)\r\nexport const setStatus = (status: string) => ({type: 'PROFILE/SET-STATUS', status} as const)\r\n//thunks\r\nexport const getUserProfile = (userId: string): AppThunk => async (dispatch) => {\r\n    let response = await usersAPI.getUserProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatusTC = (userId: string): AppThunk => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status: string): AppThunk => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n//types\r\nexport type InitialStateTypeProfile = typeof initialState\r\nexport type ProfileActionsTypes =\r\n    ReturnType<typeof addPost> |\r\n    ReturnType<typeof setUserProfile> |\r\n    ReturnType<typeof setStatus>","import React from 'react';\r\nimport {Posts} from './Posts';\r\nimport {addPost} from '../../../redux/profile-reducer';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {AppStateType} from '../../../redux/redux-store';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\nconst mapStateProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsData: state.profilePage.dialogsData,\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        addPost: (newMessageBody: string) => {\r\n            dispatch(addPost(newMessageBody))\r\n        },\r\n    }\r\n}\r\nconst connector = connect(mapStateProps, mapDispatchToProps)\r\nexport const PostsContainer = connector(Posts)\r\n//types\r\nexport type PostsPropsType = ConnectedProps<typeof connector>\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\nexport const ProfileStatus = (props: ProfileStatusPropsType) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '------'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n//types\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './ProfileInfo.module.scss'\r\nimport {ProfileStatus} from './ProfileStatus';\r\n\r\n\r\nexport const ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.wrapperInfo}>\r\n                <div className={styles.imgAvatar}>\r\n                    <img src={props.profile.photos.large} alt=\"img\"/>\r\n                </div>\r\n                <div className={styles.wrapperStatus}>\r\n                    <div className={styles.wrapperTextInfo}>\r\n                        <div className={styles.name}>{props.profile.fullName}</div>\r\n                        <h4>{props.profile.aboutMe}</h4>\r\n                    </div>\r\n                    <div className={styles.status}>\r\n                        <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n//types\r\ntype ProfileInfoPropsType = {\r\n    profile: any\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/Ball-1s-200px.cc8323a5.svg\";","import React from 'react';\r\nimport preloader from '../../../Img/Ball-1s-200px.svg';\r\nimport styles from './Preloader.module.css'\r\n\r\nconst Preloader = (props: any) => {\r\n    return <div className={styles.wrapper}>\r\n        <img src={preloader}/>\r\n    </div>\r\n};\r\n\r\nexport default  Preloader;","export default __webpack_public_path__ + \"static/media/BarcelonfProfile.ba658142.jpg\";","import React from 'react';\r\nimport styles from './Profile.module.scss'\r\nimport {PostsContainer} from './Posts/PostsContainer';\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {PropsType} from './ProfileContainer';\r\nimport image from '../../Img/BarcelonfProfile.jpg'\r\n\r\n\r\nexport const Profile = (props: PropsType) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <img src={image} alt=\"Barca\" className={styles.img}/>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <div className={styles.wrapperDialogs}>\r\n                <PostsContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import {AppStateType} from './redux-store';\r\n\r\nexport const getProfile = (state: AppStateType) => {\r\n    return state.profilePage.profile\r\n}\r\nexport const getStatus = (state: AppStateType) => {\r\n    return state.profilePage.status\r\n}\r\n\r\n\r\n","import React, {ComponentType} from 'react';\r\nimport {Profile} from './Profile';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {getStatusTC, getUserProfile, updateStatus} from '../../redux/profile-reducer';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {getProfile, getStatus} from '../../redux/profile-selectors';\r\nimport {getAuthorizedUserId, getIsAuth} from '../../redux/auth-selectors';\r\n\r\nclass ProfileContainer extends React.Component<ProfilePropsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId as string\r\n            // if (!userId) {\r\n            //     this.props.history.push('/login')\r\n            // }\r\n        }\r\n        if (userId != null) {\r\n            this.props.getUserProfile(userId);\r\n        }\r\n        if (userId != null) {\r\n            this.props.getStatus(userId)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    profile: getProfile(state),\r\n    status: getStatus(state),\r\n    authorizedUserId: getAuthorizedUserId(state),\r\n    isAuth: getIsAuth(state)\r\n})\r\n\r\nconst connector = connect(mapStateToProps, {getUserProfile, getStatus: getStatusTC, updateStatus})\r\nexport default compose<ComponentType>(connector, withRouter, withAuthRedirect)(ProfileContainer)\r\n//types\r\nexport type PropsType = ConnectedProps<typeof connector>\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype ProfilePropsType = RouteComponentProps<PathParamsType> & PropsType\r\n\r\n","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            '& > * + *': {\r\n                marginTop: theme.spacing(2),\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function LinearIndeterminate() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <LinearProgress />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './Header.module.scss'\r\nimport {HeaderPropsType} from './HeaderContainer';\r\nimport LinearIndeterminate from '../common/progress/Progress';\r\n\r\n\r\nconst img = 'https://upload.wikimedia.org/wikipedia/en/thumb/4/47/FC_Barcelona_%28crest%29.svg/1200px-FC_Barcelona_%28crest%29.svg.png'\r\n\r\nexport const Header = (props: HeaderPropsType) => (\r\n\r\n    <div className={styles.header}>\r\n        <div className={styles.image}>\r\n            <img src={img} alt=\"Logo\"/>\r\n        </div>\r\n        <div className={styles.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>\r\n                    <span className={styles.login}>{props.login}</span>\r\n                    <button className={styles.button} onClick={props.logout}>Log out</button>\r\n                </div>\r\n                : <NavLink to={'/login'} className={styles.login}>Login</NavLink>}\r\n        </div>\r\n        <div className={styles.progress}>\r\n            {props.isFetching ? <LinearIndeterminate/> : null}\r\n        </div>\r\n\r\n    </div>\r\n);\r\n\r\n","import {AppStateType} from './redux-store';\r\n\r\nexport const getIsAuth = (state: AppStateType) => {\r\n    return state.auth.isAuth\r\n}\r\nexport const getLogin = (state: AppStateType) => {\r\n    return state.auth.login\r\n}\r\n\r\n","import React from 'react';\r\nimport {Header} from './Header';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {getIsAuth, getLogin} from '../../redux/header-selectors';\r\nimport {getIsFetching} from '../../redux/users-selectors';\r\n\r\n\r\nclass HeaderContainer extends React.Component<HeaderPropsType> {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: getIsAuth(state),\r\n    login: getLogin(state),\r\n    isFetching: getIsFetching(state),\r\n})\r\n\r\nconst connector = connect(mapStateToProps, {logout})\r\n\r\nexport default connector(HeaderContainer);\r\n//types\r\nexport type HeaderPropsType = ConnectedProps<typeof connector>\r\n\r\n","import {AppThunk} from './redux-store';\r\nimport {getAuthUserData} from './auth-reducer';\r\n\r\n\r\nconst initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state: InitialStateTypeApp = initialState, action: AppReducerActionType): InitialStateTypeApp => {\r\n    switch (action.type) {\r\n        case 'APP/INITIALIZED_SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//actions\r\nexport const initializedSuccess = () => ({\r\n    type: 'APP/INITIALIZED_SUCCESS',\r\n} as const)\r\n\r\n//thunks\r\nexport const initializeApp = (): AppThunk => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}\r\n//types\r\nexport type InitialStateTypeApp = typeof initialState\r\nexport type AppReducerActionType = ReturnType<typeof initializedSuccess>\r\n","import React from 'react';\r\nimport s from './App.module.scss'\r\nimport Navbar from './components/./Navbar/Navbar';\r\nimport {Route, withRouter} from 'react-router-dom';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport Login from './components/Login/Login';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport {connect, ConnectedProps} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {initializeApp} from './redux/app-reducer';\r\nimport {AppStateType} from './redux/redux-store';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\n\r\n\r\nclass App extends React.Component<AppPropsType> {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className={s.wrapper}>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className={s.appWrapperContent}>\r\n                    <Route path={'/profile/:userId?'} render={() => <ProfileContainer/>}/>\r\n                    <Route path={'/dialogs'} render={() => <DialogsContainer/>}/>\r\n                    <Route path={'/users'} render={() => <UsersContainer/>}/>\r\n                    <Route path={'/login'} render={() => <Login/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    initialized: state.app.initialized\r\n})\r\nconst connector = connect(mapStateToProps, {initializeApp})\r\nexport default compose<React.ComponentType>(withRouter, connector)(App)\r\n//types\r\nexport type AppPropsType = ConnectedProps<typeof connector>\r\n\r\n\r\n\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {ProfileActionsTypes, profileReducer} from './profile-reducer';\r\nimport {DialogsActionsTypes, dialogsReducer} from './dialogs-reducer';\r\nimport {UserActionType, usersReducer} from './users-reducer';\r\nimport {AuthActionType, authReducer} from './auth-reducer';\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {appReducer, AppReducerActionType} from './app-reducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    userPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app:appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport type AppActionType = DialogsActionsTypes | ProfileActionsTypes | AuthActionType | UserActionType | AppReducerActionType\r\nexport type AppThunk = ThunkAction<void, AppStateType, unknown, AppActionType>\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from './redux/redux-store';\r\nimport {Provider} from 'react-redux';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>,\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1CHjx\",\"image\":\"Header_image__1wtT3\",\"loginBlock\":\"Header_loginBlock__AlTmb\",\"login\":\"Header_login__2S8ij\",\"button\":\"Header_button__3v77V\",\"progress\":\"Header_progress__1GgOE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperInfo\":\"ProfileInfo_wrapperInfo__3MbAu\",\"imgAvatar\":\"ProfileInfo_imgAvatar__1QiLq\",\"wrapperStatus\":\"ProfileInfo_wrapperStatus__2qALY\",\"wrapperTextInfo\":\"ProfileInfo_wrapperTextInfo__1UXqH\",\"name\":\"ProfileInfo_name__3lfKQ\",\"status\":\"ProfileInfo_status__3XgO-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__STmWp\",\"wrapperImage\":\"Dialogs_wrapperImage__j0XzO\",\"wrapperWrapper\":\"Dialogs_wrapperWrapper__2f0-d\",\"dialogsWrapper\":\"Dialogs_dialogsWrapper__3h4IZ\",\"messageForm\":\"Dialogs_messageForm__1__U3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItem\":\"Post_postItem__1xyUZ\",\"avatar\":\"Post_avatar__2I_9g\",\"angle\":\"Post_angle__12jGn\",\"postMessage\":\"Post_postMessage__3CeUe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__2cwds\",\"img\":\"Profile_img__3HdyS\",\"wrapperDialogs\":\"Profile_wrapperDialogs__2SKIw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postList\":\"Posts_postList__IPbvV\",\"wrapperDialogs\":\"Posts_wrapperDialogs__bVns4\",\"form\":\"Posts_form__uWDLU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__11dpi\"};"],"sourceRoot":""}