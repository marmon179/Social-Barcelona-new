{"version":3,"sources":["components/Dialogs/Message/Message.module.css","components/common/Preloader/Preloader.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.tsx","redux/dialogs-reducer.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/common/FormsControls/FormsControls.tsx","utils/validators/validators.ts","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","api/api.tsx","redux/users-reducer.tsx","assets/images/user-male.png","components/Users/Users.tsx","Img/Ball-1s-200px.svg","components/common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","components/Profile/Posts/Post/Post.tsx","components/Profile/Posts/AddNewPostForm/AddNewPostForm.tsx","components/Profile/Posts/Posts.tsx","redux/profile-reducer.tsx","components/Profile/Posts/PostsContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.tsx","index.tsx","components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Users/Users.module.css","components/common/FormsControls/FormsControls.module.css","components/Profile/Posts/Posts.module.css","components/Header/Header.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/Profile.module.css","App.module.css","components/Dialogs/DialogItem/DialogItem.module.css"],"names":["module","exports","Navbar","className","styles","navbar","list","exact","to","link","activeClassName","activeLink","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","newPost","newMessageBody","DialogItem","props","path","dialogName","Message","FormControl","input","meta","hasError","touched","error","formControl","children","Textarea","restProps","Input","required","value","maxLengthCreator","maxLength","length","maxLength50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","wrapperTextarea","Field","component","placeholder","validate","Dialogs","elementDialogs","map","d","elementsMessages","m","wrapper","wrapperImage","src","alt","wrapperWrapper","dialogsWrapper","values","addPost","mapStateToProps","isAuth","auth","withAuthRedirect","Component","connect","compose","dialogsPage","dispatch","addPostDialogAC","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","console","warn","profileAPI","getUserProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","post","delete","users","totalUsersCount","isFetching","followingInProgress","followSuccess","userID","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","usersReducer","u","followed","count","filter","Users","pagesCount","Math","ceil","pages","i","push","p","s","selectedPage","onClick","onPageChanged","photos","small","userPhoto","Button","disabled","some","variant","color","unfollow","follow","Preloader","preloader","UsersContainer","pageNumber","getUsers","this","React","userPage","setCurrentPage","items","totalCount","Header","header","loginBlock","login","logout","setAuthUserDataAC","payload","getAuthUserData","resultCode","authReducer","HeaderContainer","LoginReduxForm","style","formSummaryError","stopSubmit","_error","formData","Post","postItem","avatar","angle","postMessage","maxLength10","Posts","elementsDialogs","dialogsData","postList","wrapperDialogs","profile","setStatus","profileReducer","PostsContainer","profilePage","addPostAC","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","onStatusChange","e","currentTarget","prevProps","prevState","onChange","onBlur","autoFocus","ProfileInfo","wrapperInfo","imgAvatar","large","wrapperStatus","wrapperTextInfo","fullName","aboutMe","Profile","wrapperImg","ProfileContainer","match","params","authorizedUserId","withRouter","App","appWrapperContent","render","DialogsContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eed3d613.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3jJmh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__2ZuKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__14eAf\",\"list\":\"Navbar_list__9BMCG\",\"link\":\"Navbar_link__2N6MG\",\"activeLink\":\"Navbar_activeLink__3gIL1\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './Navbar.module.css';\r\n\r\n\r\nconst Navbar = () => (\r\n    <nav className={styles.navbar}>\r\n        <ul className={styles.list}>\r\n            <li>\r\n                <NavLink exact to='/login' className={styles.link} activeClassName={styles.activeLink}>Login</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/profile' className={styles.link} activeClassName={styles.activeLink}>Profile</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/dialogs' className={styles.link} activeClassName={styles.activeLink}>Dialogs</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/settings' className={styles.link} activeClassName={styles.activeLink}>Settings</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/users' className={styles.link} activeClassName={styles.activeLink}>Users</NavLink>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n\r\n);\r\n\r\nexport default Navbar;","type MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\ntype DialogsType = {\r\n    name: string,\r\n    id: number,\r\n}\r\nexport type InitialStateTypeDialogs = typeof initialState\r\n\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Sascha'},\r\n        {id: 2, name: 'Maksim'},\r\n        {id: 3, name: 'Katia'},\r\n    ] as Array<DialogsType>,\r\n    messages: [\r\n        {id: 1, message: 'Hello'},\r\n        {id: 2, message: 'Hi!'},\r\n        {id: 3, message: 'hello'},\r\n    ] as Array<MessageType>,\r\n\r\n}\r\n\r\nconst dialogsReducer = (state: InitialStateTypeDialogs = initialState, action: DialogsActionsTypes): InitialStateTypeDialogs => {\r\n    switch (action.type) {\r\n        case 'ADD_POST_DIALOG':\r\n            const newPost: MessageType = {\r\n                id: 4,\r\n                message: action.newMessageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newPost],\r\n            }\r\n    }\r\n    return state\r\n\r\n}\r\n\r\nexport const addPostDialogAC = (newMessageBody: any) => ({type: 'ADD_POST_DIALOG', newMessageBody} as const)\r\n\r\nexport type DialogsActionsTypes =\r\n    ReturnType<typeof addPostDialogAC>\r\n\r\nexport default dialogsReducer","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './DialogItem.module.css';\r\n\r\nexport type DialogsType = {\r\n    name: string,\r\n    id: number,\r\n}\r\n\r\nexport const DialogItem: React.FC<DialogsType> = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div>\r\n            <NavLink to={path} className={styles.dialogName} activeClassName={styles.activeLink}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport styles from './Message.module.css';\n\nexport type MessageType = {\n    message: string\n    id: number\n}\n\nexport const Message: React.FC<MessageType> = (props) => {\n    return (\n        <div className={styles.message}>\n            {props.message}\n        </div>\n    )\n}","import React from 'react';\r\nimport styles from './FormsControls.module.css'\r\n\r\ntype TextareaPropsType = {\r\n    input: string\r\n    meta: any\r\n}\r\n\r\nconst FormControl: React.FC<TextareaPropsType> = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n\r\n            {hasError && <span>{meta.error}</span>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport const Textarea: React.FC<TextareaPropsType> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><textarea{...input}{...restProps}/></FormControl>\r\n\r\n};\r\n\r\nexport const Input: React.FC<TextareaPropsType> = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}><input{...input}{...restProps}/></FormControl>\r\n\r\n};\r\n\r\n","export const required = (value: any) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}","import {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport React from 'react';\r\nimport styles from '../Dialogs.module.css';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\n\r\ntype FormDataType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nexport const AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.wrapperTextarea}>\r\n            <div>\r\n                <Field component={Textarea} name={'newMessageBody'}\r\n                       placeholder={'Enter your message'} validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const AddMessageFormRedux = reduxForm<FormDataType>({form: 'dialogAddMessageForm'})(AddMessageForm)","import React from 'react';\r\nimport styles from './Dialogs.module.css'\r\nimport {DialogItem, DialogsType,} from './DialogItem/DialogItem';\r\nimport {Message, MessageType} from './Message/Message';\r\nimport {AddMessageFormRedux} from './AddMessageForm/AddMessageForm';\r\n\r\ntype DialogPageType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessageType>\r\n    addPost: (newMessageBody: string) => void\r\n    isAuth: boolean\r\n}\r\n\r\nexport const Dialogs: React.FC<DialogPageType> = (props) => {\r\n\r\n    const elementDialogs = props.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n    const elementsMessages = props.messages.map(m => <div><Message key={m.id} message={m.message} id={m.id}/></div>)\r\n\r\n    const img = 'https://www.fcbarcelona.com/photo-resources/2020/11/02/d2c1d3ab-437b-400a-8df2-3e420b9f0799/imatge_avatars02.jpg?width=1024&height=448'\r\n\r\n    const addNewMessage = (values: any) => {\r\n        props.addPost(values.newMessageBody)\r\n    }\r\n    return (\r\n        <div className={styles.wrapper}>\r\n\r\n            <div className={styles.wrapperImage}>\r\n                <img src={img} alt=\"Barca\"/>\r\n            </div>\r\n\r\n            <div className={styles.wrapperWrapper}>\r\n\r\n                <div className={styles.dialogsWrapper}>\r\n\r\n                    <div>\r\n                        {elementDialogs}\r\n                    </div>\r\n\r\n                    <div>\r\n                        {elementsMessages}\r\n                    </div>\r\n\r\n                </div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React, {ComponentType} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../redux/redux-store';\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n}\r\n\r\n","import React from 'react';\r\nimport {addPostDialogAC, InitialStateTypeDialogs} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose, Dispatch} from 'redux';\r\n\r\ntype MapStatePropsType = InitialStateTypeDialogs\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        addPost: (newMessageBody: string) => {\r\n            dispatch(addPostDialogAC(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)\r\n\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '9cd2c268-195b-4b42-abcf-5a1644af026e'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getUserProfile(userId: number) {\r\n        console.warn('Obsolete method.Please profileAPI object.')\r\n        return profileAPI.getUserProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserProfile(userId: number) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email: string, password: number, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n","import {usersAPI} from '../api/api';\r\nimport {AppThunk} from './redux-store';\r\n\r\nexport type InitialStateTypeUser = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<string>\r\n\r\n}\r\n\r\nexport type UserType = {\r\n    id: string\r\n    photos: string\r\n    name: string\r\n    followed: boolean\r\n    status: string\r\n    location: LocationType\r\n}\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\nexport type UserActionType =\r\n    ReturnType<typeof followSuccess> |\r\n    ReturnType<typeof unfollowSuccess> |\r\n    ReturnType<typeof setUser> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setTotalUsersCount> |\r\n    ReturnType<typeof toggleIsFetching> |\r\n    ReturnType<typeof toggleFollowingProgress>\r\n\r\n\r\nconst initialState: InitialStateTypeUser = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state: InitialStateTypeUser = initialState, action: UserActionType): InitialStateTypeUser => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                }))\r\n            }\r\n        case 'SET_USERS':\r\n            return {...state, users: action.users}\r\n        case 'SET_CURRENT_PAGE': {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SET_TOTAL_USERS_COUNT': {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case 'TOGGLE_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userID]\r\n                    : state.followingInProgress.filter((id: string) => id != action.userID)\r\n            } as InitialStateTypeUser\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const followSuccess = (userID: string) => ({type: 'FOLLOW', userID} as const)\r\nexport const unfollowSuccess = (userID: string) => ({type: 'UNFOLLOW', userID} as const)\r\nexport const setUser = (users: Array<UserType>) => ({type: 'SET_USERS', users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: 'SET_CURRENT_PAGE', currentPage} as const)\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n    type: 'SET_TOTAL_USERS_COUNT',\r\n    count: totalUsersCount\r\n} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({\r\n    type: 'TOGGLE_IS_FETCHING',\r\n    isFetching\r\n} as const)\r\nexport const toggleFollowingProgress = (isFetching: boolean, userID: string | number) => ({\r\n    type: 'TOGGLE_IS_FOLLOWING_PROGRESS',\r\n    isFetching,\r\n    userID\r\n} as const)\r\n\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number):AppThunk => (dispatch) => {\r\n\r\n    dispatch(toggleIsFetching(true))\r\n\r\n    usersAPI.getUsers(currentPage, pageSize)\r\n        .then(data => {\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUser(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n        })\r\n}\r\n\r\nexport const follow = (userId: number & string):AppThunk => (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    usersAPI.follow(userId)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(followSuccess(userId))\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId))\r\n        })\r\n}\r\n\r\nexport const unfollow = (userId: number & string):AppThunk => (dispatch) => {\r\n\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    usersAPI.unfollow(userId)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(unfollowSuccess(userId))\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId))\r\n        })\r\n}\r\n\r\n\r\nexport default usersReducer","export default __webpack_public_path__ + \"static/media/user-male.3759889a.png\";","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user-male.png';\r\nimport {InitialStateTypeUser} from '../../redux/users-reducer';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Button} from '@material-ui/core';\r\n\r\nexport type UsersType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: InitialStateTypeUser\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    toggleFollowingProgress: (isFetching: boolean, id: number) => void\r\n    followingInProgress: any\r\n}\r\n\r\nexport const Users = (props: UsersType) => {\r\n\r\n    const pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p ? s.selectedPage : ''}\r\n                             onClick={() => {\r\n                                 props.onPageChanged(p)\r\n                             }}>{p}</span>\r\n            })}\r\n\r\n        </div>\r\n\r\n        <div className={s.wrapper}>{\r\n            props.users.users.map((u: any) => <div key={u.id}>\r\n\r\n                <div>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                        <img src={u.photos.small != null ? u.photos.small : userPhoto} alt={'image'}\r\n                             className={s.userPhoto}/>\r\n                    </NavLink>\r\n                    <div>\r\n                        <div className={s.name}>{u.name}</div>\r\n                        <div className={s.status}>{u.status}</div>\r\n                    </div>\r\n\r\n\r\n                    {u.followed\r\n                        ? <Button disabled={props.followingInProgress.some((id: number) => id === u.id)}\r\n                                  variant=\"contained\" color=\"secondary\"\r\n                                  onClick={() => {\r\n                                      props.unfollow(u.id)\r\n                                  }}>UnFollow</Button>\r\n\r\n                        : <Button disabled={props.followingInProgress.some((id: number) => id === u.id)}\r\n                                  variant=\"contained\" color=\"primary\"\r\n                                  onClick={() => {\r\n                                      props.follow(u.id)\r\n                                  }}>Follow</Button>}\r\n\r\n                </div>\r\n\r\n            </div>)\r\n        }</div>\r\n\r\n    </div>\r\n}","export default __webpack_public_path__ + \"static/media/Ball-1s-200px.0c804b5d.svg\";","import React from 'react';\r\nimport preloader from '../../../Img/Ball-1s-200px.svg';\r\nimport styles from './Preloader.module.css'\r\n\r\nconst Preloader = (props: any) => {\r\n    return <div className={styles.wrapper}>\r\n        <img src={preloader}/>\r\n    </div>\r\n};\r\n\r\nexport default  Preloader;","import React, {ComponentType} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    followSuccess,\r\n    getUsers,\r\n    InitialStateTypeUser,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollowSuccess\r\n} from '../../redux/users-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {Users} from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\ntype MapStatePropsType = {\r\n    users: InitialStateTypeUser\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: any\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, id: any) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                   followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.userPage,\r\n        pageSize: state.userPage.pageSize,\r\n        totalUsersCount: state.userPage.totalUsersCount,\r\n        currentPage: state.userPage.currentPage,\r\n        isFetching: state.userPage.isFetching,\r\n        followingInProgress: state.userPage.followingInProgress\r\n\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        follow: followSuccess, unfollow: unfollowSuccess, setCurrentPage,\r\n        toggleFollowingProgress, getUsers\r\n    })\r\n)(UsersContainer)\r\n\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './Header.module.css'\r\nimport {Button} from '@material-ui/core';\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: null\r\n    logout: () => void\r\n\r\n}\r\n\r\nconst img = 'https://upload.wikimedia.org/wikipedia/en/thumb/4/47/FC_Barcelona_%28crest%29.svg/1200px-FC_Barcelona_%28crest%29.svg.png'\r\n\r\nconst Header = (props: HeaderPropsType) => (\r\n\r\n    <div className={styles.header}>\r\n\r\n        <img src={img} alt=\"Logo\"/>\r\n\r\n        <div className={styles.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>\r\n                    <span className={styles.login}>{props.login}</span>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={props.logout}>Log out</Button>\r\n                </div>\r\n                : <NavLink to={'/login'} className={styles.login}>Login</NavLink>}\r\n        </div>\r\n\r\n    </div>\r\n);\r\n\r\nexport default Header;","import {authAPI} from '../api/api';\r\nimport {Dispatch} from 'redux';\r\nimport {stopSubmit} from 'redux-form';\r\nimport {AppThunk} from './redux-store';\r\n\r\nexport type InitialStateTypeAuth = {\r\n    userId: string | null\r\n    email: null\r\n    login: null\r\n    isAuth: boolean\r\n}\r\n\r\nexport type AuthActionType =\r\n    ReturnType<typeof setAuthUserDataAC>\r\n\r\n\r\nconst initialState: InitialStateTypeAuth = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state: InitialStateTypeAuth = initialState, action: AuthActionType): InitialStateTypeAuth => {\r\n    switch (action.type) {\r\n        case 'SET-USER-DATA':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserDataAC = (userID: null, email: null, login: null, isAuth: boolean) => ({\r\n    type: 'SET-USER-DATA',\r\n    payload: {userID, email, login, isAuth}\r\n} as const)\r\n\r\nexport const getAuthUserData = (): AppThunk => (dispatch) => authAPI.me()\r\n    .then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data\r\n            dispatch(setAuthUserDataAC(id, email, login, true))\r\n        }\r\n    })\r\n\r\n\r\nexport const login = (email: string, password: number, rememberMe: boolean) => (dispatch: Dispatch<any>) => {\r\n\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            } else {\r\n                const message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n                dispatch(stopSubmit('login', {_error: message}))\r\n            }\r\n        })\r\n}\r\n\r\nexport const logout = (): AppThunk => (dispatch) => {\r\n    authAPI.logout()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserDataAC(null, null, null, false))\r\n            }\r\n        })\r\n}\r\n\r\nexport default authReducer","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {getAuthUserData, logout} from '../../redux/auth-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\n\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    login: null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getAuthUserData: () => void\r\n    logout: () => void\r\n}\r\n\r\n\r\ntype AuthPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass HeaderContainer extends React.Component<AuthPropsType> {\r\n    componentDidMount() {\r\n        this.props.getAuthUserData()\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData, logout})(HeaderContainer);","import React from 'react';\r\nimport {InjectedFormProps, Field, reduxForm} from 'redux-form';\r\nimport {Input} from '../common/FormsControls/FormsControls';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport style from '../common/FormsControls/FormsControls.module.css'\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'} name={'email'}\r\n                       component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} name={'password'} type={'password'}\r\n                       component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={'checkbox'} name={'rememberMe'} component={Input}/>\r\n            </div>\r\n\r\n            {props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n\r\n            <div>\r\n                <button >Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props: any) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\r\nimport styles from './Post.module.css';\r\n\r\nexport type MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nconst Post: React.FC<MessageType> = (props) => (\r\n\r\n    <div className={styles.postItem}>\r\n\r\n        <div className={styles.avatar}>\r\n            <img\r\n                src=\"https://pbs.twimg.com/profile_images/2881220369/2b27ac38b43b17a8c5eacfc443ce3384_400x400.jpeg\"\r\n                alt=\"avatar\"/>\r\n        </div>\r\n\r\n        <div className={styles.angle}/>\r\n        <div className={styles.postMessage}>\r\n            {props.message}\r\n        </div>\r\n\r\n    </div>\r\n\r\n);\r\n\r\nexport default Post;","import {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport React from 'react';\r\nimport styles from '../Posts.module.css';\r\nimport {maxLengthCreator, required} from '../../../../utils/validators/validators';\r\nimport {Textarea} from '../../../common/FormsControls/FormsControls';\r\n\r\ntype FormDataType = {\r\n    newMessageBody: string\r\n}\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={styles.wrapperTextarea}>\r\n            <div>\r\n                <Field component={Textarea} name={'newMessageBody'}\r\n                       placeholder={'Enter your message'} validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const AddMessageFormRedux = reduxForm<FormDataType>({form: 'ProfileAddNewPostForm'})(AddNewPostForm)","import React from 'react';\r\nimport styles from './Posts.module.css';\r\nimport Post, {MessageType} from './Post/Post';\r\nimport {AddMessageFormRedux} from './AddNewPostForm/AddNewPostForm';\r\n\r\ntype ProfilePageType = {\r\n    dialogsData: Array<MessageType>\r\n    addPost: (newMessageBody: any) => void\r\n}\r\n\r\nexport const Posts: React.FC<ProfilePageType> = (props) => {\r\n    const elementsDialogs = props.dialogsData.map(d => <Post key={d.id} message={d.message} id={d.id}/>)\r\n\r\n    const onAddPost = (values: any) => {\r\n        props.addPost(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.postList}>\r\n\r\n            <div className={styles.wrapperDialogs}>\r\n                {elementsDialogs}\r\n            </div>\r\n\r\n            <AddMessageFormRedux onSubmit={onAddPost}/>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Posts;\r\n\r\n","import {profileAPI, usersAPI} from '../api/api';\r\nimport {AppThunk} from './redux-store';\r\n\r\n\r\nexport type InitialStateTypeProfile = typeof initialState\r\n\r\ntype MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nexport type ProfileActionsTypes =\r\n    ReturnType<typeof addPostAC> |\r\n    ReturnType<typeof setUserProfile> |\r\n    ReturnType<typeof setStatus>\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {id: 1, message: 'Hello people!!!!'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Very nice!!!'},\r\n    ] as Array<MessageType>,\r\n    profile: null,\r\n    status: ''\r\n\r\n}\r\n\r\nconst profileReducer = (state: InitialStateTypeProfile = initialState, action: ProfileActionsTypes): InitialStateTypeProfile => {\r\n    switch (action.type) {\r\n        case 'ADD-POST':\r\n            const newPost: MessageType = {\r\n                id: 4,\r\n                message: action.newMessageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                dialogsData: [...state.dialogsData, newPost],\r\n            }\r\n        case 'SET-STATUS':\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case 'SET_USER_PROFILE':\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostAC = (newMessageBody: string) => ({type: 'ADD-POST', newMessageBody} as const)\r\nexport const setUserProfile = (profile: null) => ({type: 'SET_USER_PROFILE', profile} as const)\r\nexport const setStatus = (status: string) => ({type: 'SET-STATUS', status} as const)\r\n\r\nexport const getUserProfile = (userId: number):AppThunk => (dispatch) => {\r\n    usersAPI.getUserProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n        })\r\n}\r\n\r\nexport const getStatus = (userId: number):AppThunk => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data));\r\n        })\r\n}\r\nexport const updateStatus = (status: string):AppThunk => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status))\r\n            }\r\n        })\r\n}\r\n\r\nexport default profileReducer","import React from 'react';\r\nimport Posts from './Posts';\r\nimport {addPostAC, InitialStateTypeProfile} from '../../../redux/profile-reducer';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../../redux/redux-store';\r\nimport {Dispatch} from 'redux';\r\n\r\ntype MapStatePropsType = InitialStateTypeProfile\r\n\r\nconst mapStateProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogsData: state.profilePage.dialogsData,\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        addPost: (newMessageBody: string) => {\r\n            dispatch(addPostAC(newMessageBody))\r\n        },\r\n    }\r\n}\r\nexport const PostsContainer = connect(mapStateProps, mapDispatchToProps)(Posts)\r\n","import React from 'react';\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: any) => void\r\n}\r\n\r\nclass ProfileStatus extends React.Component<ProfileStatusPropsType> {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    };\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    };\r\n    onStatusChange = (e: any) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<ProfileStatusPropsType>, prevState: Readonly<{}>) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onClick={this.activateEditMode}>{this.props.status || '----'}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} onBlur={this.deactivateEditMode} value={this.state.status}\r\n                           autoFocus={true}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport styles from './ProfileInfo.module.css'\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: any\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\r\n\r\n        return (\r\n            <div>\r\n                <div className={styles.wrapperInfo}>\r\n\r\n                    <div className={styles.imgAvatar}>\r\n                        <img src={props.profile.photos.large} alt=\"img\"/>\r\n                    </div>\r\n\r\n\r\n                    <div className={styles.wrapperStatus}>\r\n\r\n                        <div className={styles.wrapperTextInfo}>\r\n                            <div className={styles.name}>{props.profile.fullName}</div>\r\n                            <h4>{props.profile.aboutMe}</h4>\r\n                        </div>\r\n\r\n                        <div className={styles.status}>\r\n                            <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n;\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from './Profile.module.css'\r\nimport {PostsContainer} from './Posts/PostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {ProfilePageType} from './ProfileContainer';\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfilePageType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n        if (!props.profile) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        const image = 'https://store.fcbarcelona.com/medias/Secciones-Desktop-copy.jpg?context=bWFzdGVyfHJvb3R8NDUyNDkyfGltYWdlL2pwZWd8aDQzL2g1OC84ODc4MzQwMDQ2ODc4L1NlY2Npb25lc19EZXNrdG9wIGNvcHkuanBnfGQwOWY1YzQ2OWYxZGY2ZDUyMzcxMThkMjgwNGNlNDBjZWM1YTc5ZDJlYzFkN2Y3ODFiYWI0NzEwNWVjMWI4MWU'\r\n\r\n        return (\r\n            <div className={styles.wrapper}>\r\n\r\n                <div className={styles.wrapperImg}>\r\n                    <img src={image} alt=\"Barca\"/>\r\n                </div>\r\n\r\n                <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n                <div className={styles.wrapperDialogs}>\r\n                    <PostsContainer/>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n;\r\n\r\nexport default Profile;","import React, {ComponentType} from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {getStatus, getUserProfile, updateStatus} from '../../redux/profile-reducer';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {MessageType} from './Posts/Post/Post';\r\n\r\nexport type ProfilePageType = {\r\n    dialogsData: Array<MessageType>\r\n    profile: null\r\n    status: string\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfilePageType | null\r\n    status: string\r\n    authorizedUserId: any\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (userId: string) => void\r\n    getStatus: (userId: string) => void\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport s from './App.module.css'\r\nimport Navbar from './components/./Navbar/Navbar';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className={s.wrapper}>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className={s.appWrapperContent}>\r\n                    <Route path={'/profile/:userId?'} render={() => <ProfileContainer/>}/>\r\n                    <Route path={'/dialogs'} render={() => <DialogsContainer/>}/>\r\n                    <Route path={'/users'} render={() => <UsersContainer/>}/>\r\n                    <Route path={'/login'} render={() => <Login/>}/>\r\n                </div>\r\n\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport profileReducer, {ProfileActionsTypes} from './profile-reducer';\r\nimport dialogsReducer, {DialogsActionsTypes} from './dialogs-reducer';\r\nimport usersReducer, {UserActionType} from './users-reducer';\r\nimport authReducer, {AuthActionType} from './auth-reducer';\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    userPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AppActionType = DialogsActionsTypes | ProfileActionsTypes | AuthActionType |UserActionType\r\n\r\nexport type AppThunk= ThunkAction<void, AppStateType, unknown, AppActionType>\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from './redux/redux-store';\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>,\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__i2TJU\",\"wrapperImage\":\"Dialogs_wrapperImage__31RUS\",\"wrapperWrapper\":\"Dialogs_wrapperWrapper__3N0Am\",\"dialogsWrapper\":\"Dialogs_dialogsWrapper__3NLDW\",\"wrapperTextarea\":\"Dialogs_wrapperTextarea__1l0_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperInfo\":\"ProfileInfo_wrapperInfo___Xmfc\",\"wrapperTextInfo\":\"ProfileInfo_wrapperTextInfo__22zT5\",\"imgAvatar\":\"ProfileInfo_imgAvatar__15bpd\",\"status\":\"ProfileInfo_status__14Bi-\",\"name\":\"ProfileInfo_name__iI2qA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__233Xx\",\"name\":\"Users_name__1hCad\",\"status\":\"Users_status__2s9Ux\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__zLuG8\",\"error\":\"FormsControls_error__2GwQV\",\"formSummaryError\":\"FormsControls_formSummaryError__3iDYp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postList\":\"Posts_postList__1J7dT\",\"wrapperDialogs\":\"Posts_wrapperDialogs__115nu\",\"wrapperTextarea\":\"Posts_wrapperTextarea__3bl8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Fm84\",\"loginBlock\":\"Header_loginBlock__1OZ0X\",\"login\":\"Header_login__31mpt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItem\":\"Post_postItem__ukIZz\",\"avatar\":\"Post_avatar__2zfO_\",\"postMessage\":\"Post_postMessage__25xok\",\"angle\":\"Post_angle__11NYP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__1wbHz\",\"wrapperImg\":\"Profile_wrapperImg__1o1XL\",\"wrapperDialogs\":\"Profile_wrapperDialogs__1Rflb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2V1M4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogName\":\"DialogItem_dialogName__2VBZG\",\"activeLink\":\"DialogItem_activeLink__3IK2h\"};"],"sourceRoot":""}