{"version":3,"sources":["components/Profile/Posts/Post/Post.module.css","components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Posts/Posts.module.css","App.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Users/Users.module.css","components/Profile/Profile.module.css","components/Header/Header.module.css","components/Dialogs/Message/Message.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.tsx","redux/dialogs-reducer.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","api/api.tsx","redux/users-reducer.tsx","assets/images/user-male.png","components/Users/Users.tsx","Img/Ball-1s-200px.svg","components/common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/Posts/Post/ProfilePhoto/ProfilePhoto.tsx","components/Profile/Posts/Post/Post.tsx","components/Profile/Posts/Posts.tsx","redux/profile-reducer.tsx","components/Profile/Posts/PostsContainer.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.tsx","index.tsx"],"names":["module","exports","Navbar","className","styles","navbar","list","exact","to","link","activeClassName","activeLink","initialState","dialogs","id","name","messages","message","messageForNewPostDialog","isAuth","dialogsReducer","state","action","type","newPost","newText","DialogItem","props","path","dialogName","Message","Dialogs","elementDialogs","map","d","elementsMessages","m","wrapper","wrapperImage","src","alt","wrapperWrapper","dialogsWrapper","wrapperTextarea","value","onChange","onPostChange","onClick","addPost","DialogsContainer","connect","dialogsPage","auth","dispatch","e","text","currentTarget","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","authAPI","users","totalUsersCount","isFetching","followingInProgress","followSuccess","userID","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","usersReducer","u","followed","count","filter","Users","pagesCount","Math","ceil","pages","i","push","p","s","selectedPage","onPageChanged","photos","small","userPhoto","disabled","some","unfollow","follow","status","Preloader","preloader","UsersContainer","pageNumber","getUsers","this","React","Component","userPage","setCurrentPage","items","totalCount","ProfilePhoto","postAvatar","angle","Post","postItem","postMessage","Posts","elementsDialogs","dialogsData","postList","wrapperDialogs","messageForNewPost","profile","profileReducer","PostsContainer","profilePage","ProfileInfo","wrapperImg","wrapperInfo","imgAvatar","large","wrapperTextInfo","fullName","aboutMe","Profile","ProfileContainer","match","params","getUserProfile","WithUrlDataContainerComponent","withRouter","Header","header","loginBlock","login","email","authReducer","HeaderContainer","getAuthUserData","resultCode","setAuthUserDataAC","Login","App","appWrapperContent","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24cba38e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postItem\":\"Post_postItem__ukIZz\",\"postAvatar\":\"Post_postAvatar__J8PaC\",\"postMessage\":\"Post_postMessage__25xok\",\"angle\":\"Post_angle__11NYP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__i2TJU\",\"wrapperImage\":\"Dialogs_wrapperImage__31RUS\",\"wrapperWrapper\":\"Dialogs_wrapperWrapper__3N0Am\",\"dialogsWrapper\":\"Dialogs_dialogsWrapper__3NLDW\",\"wrapperTextarea\":\"Dialogs_wrapperTextarea__1l0_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperImg\":\"ProfileInfo_wrapperImg__3alXy\",\"wrapperInfo\":\"ProfileInfo_wrapperInfo___Xmfc\",\"wrapperTextInfo\":\"ProfileInfo_wrapperTextInfo__22zT5\",\"imgAvatar\":\"ProfileInfo_imgAvatar__15bpd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postList\":\"Posts_postList__1J7dT\",\"wrapperDialogs\":\"Posts_wrapperDialogs__115nu\",\"wrapperTextarea\":\"Posts_wrapperTextarea__3bl8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2V1M4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogName\":\"DialogItem_dialogName__2VBZG\",\"activeLink\":\"DialogItem_activeLink__3IK2h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__233Xx\",\"selectedPage\":\"Users_selectedPage__tagcj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__1wbHz\",\"wrapperDialogs\":\"Profile_wrapperDialogs__1Rflb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Fm84\",\"loginBlock\":\"Header_loginBlock__1OZ0X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3jJmh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__14eAf\",\"list\":\"Navbar_list__9BMCG\",\"link\":\"Navbar_link__2N6MG\",\"activeLink\":\"Navbar_activeLink__3gIL1\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './Navbar.module.css';\r\n\r\n\r\nconst Navbar = () => (\r\n    <nav className={styles.navbar}>\r\n        <ul className={styles.list}>\r\n            <li>\r\n                <NavLink exact to='/login' className={styles.link} activeClassName={styles.activeLink}>Login</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/profile' className={styles.link} activeClassName={styles.activeLink}>Profile</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/dialogs' className={styles.link} activeClassName={styles.activeLink}>Dialogs</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/settings' className={styles.link} activeClassName={styles.activeLink}>Settings</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/users' className={styles.link} activeClassName={styles.activeLink}>Users</NavLink>\r\n            </li>\r\n        </ul>\r\n\r\n    </nav>\r\n\r\n);\r\n\r\nexport default Navbar;","import {ActionsTypes} from './state/store';\r\n\r\ntype MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\ntype DialogsType = {\r\n    name: string,\r\n    id: number,\r\n}\r\nexport type InitialStateTypeDialogs = typeof initialState\r\n\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Sascha'},\r\n        {id: 2, name: 'Maksim'},\r\n        {id: 3, name: 'Katia'},\r\n    ] as Array<DialogsType>,\r\n    messages: [\r\n        {id: 1, message: 'Hello'},\r\n        {id: 2, message: 'Hi!'},\r\n        {id: 3, message: 'hello'},\r\n    ] as Array<MessageType>,\r\n    messageForNewPostDialog: '',\r\n    isAuth:false\r\n\r\n}\r\n\r\nconst dialogsReducer = (state: InitialStateTypeDialogs = initialState, action: ActionsTypes): InitialStateTypeDialogs => {\r\n    switch (action.type) {\r\n        case 'ADD_POST_DIALOG':\r\n            const newPost: MessageType = {\r\n                id: 4,\r\n                message: state.messageForNewPostDialog\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newPost],\r\n                messageForNewPostDialog: ''\r\n            }\r\n\r\n        case 'UPDATE_NEW_POST_TEXT_DIALOG':\r\n            return {\r\n                ...state,\r\n                messageForNewPostDialog: action.newText\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const addPostDialogAC = () => ({type: 'ADD_POST_DIALOG'} as const)\r\nexport const UpdateNewPostTextDialogAction = (newText: string) => ({\r\n    type: 'UPDATE_NEW_POST_TEXT_DIALOG',\r\n    newText: newText\r\n} as const)\r\n\r\nexport default dialogsReducer","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './DialogItem.module.css';\r\n\r\nexport type DialogsType = {\r\n    name: string,\r\n    id: number,\r\n}\r\n\r\nexport const DialogItem: React.FC<DialogsType> = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div>\r\n            <NavLink to={path} className={styles.dialogName} activeClassName={styles.activeLink}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport styles from './Message.module.css';\r\n\r\nexport type MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nexport const Message: React.FC<MessageType> = (props) => {\r\n    return (\r\n        <div className={styles.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\nimport styles from './Dialogs.module.css'\r\nimport {DialogItem, DialogsType,} from './DialogItem/DialogItem';\r\nimport {Message, MessageType} from './Message/Message';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\ntype DialogPageType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessageType>\r\n    messageForNewPostDialog: string\r\n    addPost: () => void\r\n    onPostChange: (e: ChangeEvent<HTMLTextAreaElement>) => void\r\n    isAuth: boolean\r\n}\r\n\r\nexport const Dialogs: React.FC<DialogPageType> = (props) => {\r\n    const elementDialogs = props.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n    const elementsMessages = props.messages.map(m => <div><Message key={m.id} message={m.message} id={m.id}/></div>)\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.wrapperImage}>\r\n                <img\r\n                    src=\"https://www.fcbarcelona.com/photo-resources/2020/11/02/d2c1d3ab-437b-400a-8df2-3e420b9f0799/imatge_avatars02.jpg?width=1024&height=448\"\r\n                    alt=\"Barca\"/>\r\n            </div>\r\n            <div className={styles.wrapperWrapper}>\r\n                <div className={styles.dialogsWrapper}>\r\n                    <div>\r\n                        {elementDialogs}\r\n                    </div>\r\n\r\n                    <div>\r\n                        {elementsMessages}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.wrapperTextarea}>\r\n                    <div>\r\n                        <textarea value={props.messageForNewPostDialog} onChange={props.onPostChange}/>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={props.addPost}>Add post</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React, {ChangeEvent} from 'react';\r\nimport {addPostDialogAC, InitialStateTypeDialogs, UpdateNewPostTextDialogAction} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\n\r\ntype MapStatePropsType = InitialStateTypeDialogs\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        messageForNewPostDialog: state.dialogsPage.messageForNewPostDialog,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        onPostChange: (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n            const text = e.currentTarget.value\r\n            dispatch(UpdateNewPostTextDialogAction(text))\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostDialogAC())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\n\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '9cd2c268-195b-4b42-abcf-5a1644af026e'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getUserProfile(userId: number) {\r\n        return instance.get(`profile/` + userId)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    }\r\n}\r\n","import {usersAPI} from '../api/api';\r\n\r\nexport type InitialStateTypeUser = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: any\r\n\r\n}\r\n\r\nexport type UserType = {\r\n    id: string\r\n    photos: any\r\n    name: string\r\n    followed: boolean\r\n    status: string\r\n    location: LocationType\r\n}\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\ntype ActionsTypes = {\r\n    type: string\r\n    userID: string\r\n    users: UserType[]\r\n    currentPage: number\r\n    count: number\r\n    isFetching: boolean\r\n\r\n}\r\n\r\nconst initialState: InitialStateTypeUser = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state: InitialStateTypeUser = initialState, action: ActionsTypes): InitialStateTypeUser => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                }))\r\n            }\r\n        case 'SET_USERS':\r\n            return {...state, users: action.users}\r\n        case 'SET_CURRENT_PAGE': {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SET_TOTAL_USERS_COUNT': {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case 'TOGGLE_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userID]\r\n                    : state.followingInProgress.filter((id: any) => id != action.userID)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const followSuccess = (userID: string) => ({type: 'FOLLOW', userID} as const)\r\nexport const unfollowSuccess = (userID: string) => ({type: 'UNFOLLOW', userID} as const)\r\nexport const setUser = (users: Array<UserType>) => ({type: 'SET_USERS', users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: 'SET_CURRENT_PAGE', currentPage} as const)\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n    type: 'SET_TOTAL_USERS_COUNT',\r\n    count: totalUsersCount\r\n} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({\r\n    type: 'TOGGLE_IS_FETCHING',\r\n    isFetching\r\n} as const)\r\nexport const toggleFollowingProgress = (isFetching: boolean, userID: number) => ({\r\n    type: 'TOGGLE_IS_FOLLOWING_PROGRESS',\r\n    isFetching,\r\n    userID\r\n} as const)\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n    return (dispatch:any) => {\r\n\r\n        dispatch(toggleIsFetching(true))\r\n\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(toggleIsFetching(false))\r\n                dispatch(setUser(data.items))\r\n                dispatch(setTotalUsersCount(data.totalCount))\r\n            })\r\n    }\r\n}\r\n\r\nexport const follow = (userId: any) => {\r\n    return (dispatch: any) => {\r\n\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: any) => {\r\n    return (dispatch: any) => {\r\n\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer","export default __webpack_public_path__ + \"static/media/user-male.3759889a.png\";","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user-male.png';\r\nimport {InitialStateTypeUser} from '../../redux/users-reducer';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport type UsersType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: InitialStateTypeUser\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    toggleFollowingProgress: (isFetching: boolean, id: number) => void\r\n    followingInProgress: any\r\n}\r\n\r\nexport const Users = (props: UsersType) => {\r\n    const pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p ? s.selectedPage : ''}\r\n                             onClick={() => {\r\n                                 props.onPageChanged(p)\r\n                             }}>{p}</span>\r\n            })}\r\n        </div>\r\n        {\r\n            props.users.users.map((u: any) => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                        <img src={u.photos.small != null ? u.photos.small : userPhoto} alt={'image'}\r\n                             className={s.userPhoto}/>\r\n                            </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button disabled={props.followingInProgress.some((id: any) => id === u.id)}\r\n                                      onClick={() => {props.unfollow(u.id)}}>UnFollow</button>\r\n\r\n                            : <button disabled={props.followingInProgress.some((id: any) => id === u.id)}\r\n                                      onClick={() => {props.follow(u.id)}}>Follow</button>}\r\n                                </div>\r\n                                </span>\r\n                <span>\r\n                                <span>\r\n                                <div>{u.name}</div>\r\n                                <div>{u.status}</div>\r\n                                </span>\r\n                                <span>\r\n                                <div>{'u.location.country'}</div>\r\n                                <div>{'u.location.city'}</div>\r\n                                </span>\r\n                                </span>\r\n            </div>)\r\n        }\r\n\r\n    </div>\r\n}","export default __webpack_public_path__ + \"static/media/Ball-1s-200px.0c804b5d.svg\";","import React from 'react';\r\nimport preloader from '../../../Img/Ball-1s-200px.svg';\r\n\r\nconst Preloader = (props: any) => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n};\r\n\r\nexport default  Preloader;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    followSuccess,\r\n    getUsers,\r\n    InitialStateTypeUser,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollowSuccess\r\n} from '../../redux/users-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {Users} from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\ntype MapStatePropsType = {\r\n    users: InitialStateTypeUser\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: any\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: string) => void\r\n    unfollow: (userId: string) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, id: any) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                   followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.userPage,\r\n        pageSize: state.userPage.pageSize,\r\n        totalUsersCount: state.userPage.totalUsersCount,\r\n        currentPage: state.userPage.currentPage,\r\n        isFetching: state.userPage.isFetching,\r\n        followingInProgress: state.userPage.followingInProgress\r\n\r\n    }\r\n}\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {\r\n    follow: followSuccess,\r\n    unfollow: unfollowSuccess,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    getUsers\r\n})(UsersContainer)\r\n\r\n\r\n\r\n","import styles from '../Post.module.css';\r\nimport React from 'react';\r\n\r\nexport const ProfilePhoto = (props: any) => {\r\n    return (\r\n        <>\r\n            <div className={styles.postAvatar}>\r\n                <img\r\n                    src=\"https://pbs.twimg.com/profile_images/2881220369/2b27ac38b43b17a8c5eacfc443ce3384_400x400.jpeg\"\r\n                    alt=\"avatar\"/>\r\n            </div>\r\n\r\n            <div className={styles.angle}/>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport styles from './Post.module.css';\r\nimport {ProfilePhoto} from './ProfilePhoto/ProfilePhoto';\r\n\r\nexport type MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nconst Post: React.FC<MessageType> = (props) => (\r\n    <div className={styles.postItem}>\r\n        <ProfilePhoto/>\r\n        <div className={styles.postMessage}>\r\n            {props.message}\r\n        </div>\r\n    </div>\r\n\r\n);\r\n\r\nexport default Post;","import React, {ChangeEvent} from 'react';\r\nimport styles from './Posts.module.css';\r\nimport Post, {MessageType} from './Post/Post';\r\n\r\ntype ProfilePageType = {\r\n    dialogsData: Array<MessageType>\r\n    messageForNewPost: string\r\n    addPost: () => void\r\n    onPostChange: (e: ChangeEvent<HTMLTextAreaElement>) => void\r\n}\r\n\r\nexport const Posts: React.FC<ProfilePageType> = (props) => {\r\n    const elementsDialogs = props.dialogsData.map(d => <Post key={d.id} message={d.message} id={d.id}/>)\r\n\r\n    return (\r\n        <div className={styles.postList}>\r\n            <div className={styles.wrapperDialogs}>\r\n                {elementsDialogs}\r\n            </div>\r\n            <div className={styles.wrapperTextarea}>\r\n\r\n                <div>\r\n                    <textarea onChange={props.onPostChange} value={props.messageForNewPost}> </textarea>\r\n                </div>\r\n\r\n                <div>\r\n                    <button onClick={props.addPost}>Add post</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Posts;","import {ActionsTypes} from './state/store';\r\nimport {usersAPI} from '../api/api';\r\n\r\n\r\nexport type InitialStateTypeProfile = typeof initialState\r\n\r\ntype MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nconst initialState = {\r\n    dialogsData: [\r\n        {id: 1, message: 'Hello people!!!!'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Very nice!!!'},\r\n    ] as Array<MessageType>,\r\n    messageForNewPost: '',\r\n    profile: null\r\n\r\n}\r\n\r\nconst profileReducer = (state: InitialStateTypeProfile = initialState, action: ActionsTypes): InitialStateTypeProfile => {\r\n    switch (action.type) {\r\n        case 'ADD-POST':\r\n            const newPost: MessageType = {\r\n                id: 4,\r\n                message: state.messageForNewPost\r\n            };\r\n            return {\r\n                ...state,\r\n                dialogsData: [...state.dialogsData, newPost],\r\n                messageForNewPost: ''\r\n            }\r\n        case 'UPDATE-NEW-POST-TEXT':\r\n            return {\r\n                ...state,\r\n                messageForNewPost: action.newText\r\n            }\r\n        case 'SET_USER_PROFILE':\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const addPostAC = () => ({type: 'ADD-POST'} as const)\r\nexport const setUserProfile = (profile: null) => ({type: 'SET_USER_PROFILE', profile} as const)\r\nexport const getUserProfile = (userId: any) => (dispatch: any) => {\r\n    usersAPI.getUserProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n        })\r\n}\r\nexport const UpdateNewPostTextAction = (newText: string) => ({type: 'UPDATE-NEW-POST-TEXT', newText: newText} as const)\r\n\r\nexport default profileReducer","import React, {ChangeEvent} from 'react';\r\nimport Posts from './Posts';\r\nimport {addPostAC, InitialStateTypeProfile, UpdateNewPostTextAction} from '../../../redux/profile-reducer';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../../redux/redux-store';\r\n\r\ntype MapStatePropsType = InitialStateTypeProfile\r\n\r\nconst mapStateProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogsData: state.profilePage.dialogsData,\r\n        messageForNewPost: state.profilePage.messageForNewPost,\r\n        profile: state.profilePage.profile\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostAC())\r\n        },\r\n        onPostChange: (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n            const text = e.currentTarget.value\r\n            dispatch(UpdateNewPostTextAction(text))\r\n        }\r\n    }\r\n}\r\nexport const PostsContainer = connect(mapStateProps, mapDispatchToProps)(Posts)\r\n","import React from 'react';\r\nimport styles from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: any\r\n}\r\n\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\r\n        if (!props.profile) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div className={styles.wrapperImg}>\r\n                        <img\r\n                            src=\"https://store.fcbarcelona.com/medias/Secciones-Desktop-copy.jpg?context=bWFzdGVyfHJvb3R8NDUyNDkyfGltYWdlL2pwZWd8aDQzL2g1OC84ODc4MzQwMDQ2ODc4L1NlY2Npb25lc19EZXNrdG9wIGNvcHkuanBnfGQwOWY1YzQ2OWYxZGY2ZDUyMzcxMThkMjgwNGNlNDBjZWM1YTc5ZDJlYzFkN2Y3ODFiYWI0NzEwNWVjMWI4MWU\"\r\n                            alt=\"Barca\"/>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.wrapperInfo}>\r\n                    <div className={styles.imgAvatar}>\r\n                        <img src={props.profile.photos.large} alt=\"img\"/>\r\n                    </div>\r\n                    <div className={styles.wrapperTextInfo}>\r\n                        <span>\r\n                        <p>{props.profile.fullName}</p>\r\n                    </span>\r\n                        <span>\r\n                        <p>{props.profile.aboutMe}</p>\r\n                    </span>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n;\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from './Profile.module.css'\r\nimport {PostsContainer} from './Posts/PostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\ntype ProfilePropsType = {\r\n    profile:any\r\n}\r\n\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <ProfileInfo profile={props.profile} />\r\n                <div className={styles.wrapperDialogs}>\r\n                    <PostsContainer/>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n;\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {getUserProfile} from '../../redux/profile-reducer';\r\nimport {Redirect, RouteComponentProps, withRouter} from 'react-router-dom';\r\n\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: any\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (userId: string) => void\r\n}\r\n\r\ntype OwnPropsType = MapStatePropsType & MapDispatchPropsType\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = '2'\r\n        }\r\n        this.props.getUserProfile(userId);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nconst WithUrlDataContainerComponent = withRouter(ProfileContainer)\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);","import React, {ReactNode} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './Header.module.css'\r\n\r\n\r\nconst Header = (props: any) => (\r\n\r\n    <div className={styles.header}>\r\n        <img\r\n            src=\"https://upload.wikimedia.org/wikipedia/en/thumb/4/47/FC_Barcelona_%28crest%29.svg/1200px-FC_Barcelona_%28crest%29.svg.png\"\r\n            alt=\"Logo\"/>\r\n        <div className={styles.loginBlock}>\r\n            {props.isAuth ? props.login\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Header;","import {authAPI} from '../api/api';\r\n\r\nexport type InitialStateTypeAuth = {\r\n    userId: null\r\n    email: null\r\n    login: null\r\n    isAuth: boolean\r\n\r\n}\r\n\r\ntype DataPropsType = {\r\n    userId: null\r\n    email: null\r\n    login: null\r\n\r\n}\r\n\r\ntype ActionsTypes = {\r\n    type: string\r\n    data: DataPropsType\r\n\r\n}\r\n\r\nconst initialState: InitialStateTypeAuth = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state: InitialStateTypeAuth = initialState, action: ActionsTypes): InitialStateTypeAuth => {\r\n    switch (action.type) {\r\n        case 'SET-USER-DATA':\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserDataAC = (userID: number, email: string, login: string) => ({\r\n    type: 'SET-USER-DATA',\r\n    data: {userID, email, login}\r\n} as const)\r\nexport const getAuthUserData = () => (dispatch: any) => {\r\n    return authAPI.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, login, email} = response.data.data\r\n                dispatch(setAuthUserDataAC(id, email, login))\r\n            }\r\n        })\r\n}\r\n\r\nexport default authReducer","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {getAuthUserData} from '../../redux/auth-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\n\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    login: null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getAuthUserData: () => void\r\n}\r\n\r\n\r\ntype AuthPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass HeaderContainer extends React.Component<AuthPropsType> {\r\n    componentDidMount() {\r\n        this.props.getAuthUserData()\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData})(HeaderContainer);","import React from 'react';\r\n\r\ntype LoginPropsType = {\r\n\r\n}\r\n\r\nconst Login = (props:LoginPropsType) => {\r\n    return <h1>LOGIN</h1>\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport s from './App.module.css'\r\nimport Navbar from './components/./Navbar/Navbar';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport {DialogsContainer} from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className={s.wrapper}>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className={s.appWrapperContent}>\r\n                    <Route path={'/profile/:userId?'} render={() => <ProfileContainer/>}/>\r\n                    <Route path={'/dialogs'} render={() => <DialogsContainer/>}/>\r\n                    <Route path={'/users'} render={() => <UsersContainer/>}/>\r\n                    <Route path={'/login'} render={() => <Login/>}/>\r\n                </div>\r\n\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    userPage: usersReducer,\r\n    auth:authReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(thunkMiddleware))\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {store} from './redux/redux-store';\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>,\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n\r\n\r\n\r\n"],"sourceRoot":""}